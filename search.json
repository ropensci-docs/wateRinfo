[{"path":"https://docs.ropensci.org/wateRinfo/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to wateRinfo","title":"Contributing to wateRinfo","text":"First , thanks considering contributing wateRinfo! üëç ‚Äôs people like make rewarding us - project maintainers - work wateRinfo. üòä wateRinfo open source project, maintained people care. directly funded .","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to wateRinfo","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to wateRinfo","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to wateRinfo","text":"Think wateRinfo useful? Let others discover , telling person, via Twitter blog post. Using wateRinfo paper writing? Consider citing .","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to wateRinfo","text":"Using wateRinfo got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer email.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to wateRinfo","text":"idea new wateRinfo feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to wateRinfo","text":"Using wateRinfo discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to wateRinfo","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to wateRinfo","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to wateRinfo","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to wateRinfo","text":"Care fix bugs implement new functionality wateRinfo? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://docs.ropensci.org/wateRinfo/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to wateRinfo","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream main. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). R CMD check using devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/articles/define_date_periods.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Define the date period to download","text":"downloading time series get_timeseries_tsid() method, ts_id argument provides link variable, location frequency time series, extent/period download. time period download defined combination arguments , period. usage similar VMM documentation API . main difference wateRinfo package uses existing R functions interpret date strings given user sending API (formatted string according %Y-%m-%d %H:%M:%S). vignette aims briefly explain define arguments.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/articles/define_date_periods.html","id":"which-combinations","dir":"Articles","previous_headings":"","what":"Which combinations?","title":"Define the date period to download","text":"order define period, start end date required. Defining three result error, combination /, /period /period allowed. Moreover, period defined, waterinfo.API automatically define current time. Hence, defining last x days/months/years/‚Ä¶ can achieved using period option.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/articles/define_date_periods.html","id":"how-to-define-the-fromto-dates","dir":"Articles","previous_headings":"","what":"How to define the from/to dates","title":"Define the date period to download","text":"package except valid date strings well valid date objects (POSIXct, POSIXt) input arguments. using string value, can defined different resolutions: ‚Äú2017-01-01 11:00:00‚Äù ‚Äú2017-01-01‚Äù ‚Äú2017-01‚Äù ‚Äú2017‚Äù According lubridate package, orders accepted: ymd_hms, ymd, ym, y. result, also \"2017/01/01\", \"2017 01 01\" \"20170101\" valid date string inputs. Make sure order year-month-day respected. example, \"01/01/2017\", \"01-01-2017\" \"01-2017\" valid.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/articles/define_date_periods.html","id":"how-to-define-the-period","dir":"Articles","previous_headings":"","what":"How to define the period","title":"Define the date period to download","text":"period string provides flexible way extract time period starting (combination ) ending (combination ) given moment. Moreover, using period argument, cover cases one interested last x days/months/years/‚Ä¶. examples : P3D : period three days P2Y : period 2 years PT6H : period 6 hours P2DT6H : period 2 days 6 hours ‚Ä¶ general, period string provided P#Y#M#DT#H#M#S, P defines Period (always required!) # integer value expressing number ‚Ä¶. codes define specific time interval: Y - years M - months D - days W - weeks H - hours M - minutes S - seconds T required codes sub-day resolution (day, minutes, hours) part period string. Furthermore, D W mutually exclusive. examples valid period strings : P1DT12H : period 1 day 12 hours P2WT12H : period 2 weeks 12 hours P1Y6M3DT4H20M30S: period 1 year, six months, 3 days, 4 hours, 20 minutes 30 seconds","code":""},{"path":"https://docs.ropensci.org/wateRinfo/articles/define_date_periods.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Define the date period to download","text":"interested irradiance (15min frequency) data, following stations provide time series: Focusing data Herentals, ts_id use 78930042. different options define period get data : data last day, using period :  data last 12 hours, 30 minutes, using period :  historical data July till August 2014, using month level  historical data one day July 1st 2014, using period","code":"library(wateRinfo) get_stations(\"irradiance\") ##      ts_id station_latitude station_longitude station_id station_no ## 1 78845042         51.27226          3.728299      12207   ME03_017 ## 2 78879042         50.86149          3.411318      12209   ME05_019 ## 3 78947042         51.20300          5.439589      12213   ME11_002 ## 4 78913042         50.73795          5.141976      12211   ME09_012 ## 5 78862042         51.24379          4.266912      12208   ME04_001 ## 6 78896042         50.88663          4.094898      12210   ME07_006 ## 7 78930042         51.16224          4.845708      12212   ME10_011 ##              station_name stationparameter_name parametertype_name ## 1            Boekhoute_ME                   Rad                 Rn ## 2              Waregem_ME                   Rad                 Rn ## 3             Overpelt_ME                   Rad                 Rn ## 4 Niel-bij-St.-Truiden_ME                   Rad                 Rn ## 5              Melsele_ME                   Rad                 Rn ## 6           Liedekerke_ME                   Rad                 Rn ## 7            Herentals_ME                   Rad                 Rn ##   ts_unitsymbol dataprovider ## 1          W/m¬≤          VMM ## 2          W/m¬≤          VMM ## 3          W/m¬≤          VMM ## 4          W/m¬≤          VMM ## 5          W/m¬≤          VMM ## 6          W/m¬≤          VMM ## 7          W/m¬≤          VMM irr_lastday <- get_timeseries_tsid(\"78930042\", period = \"P1D\") ggplot(irr_lastday, aes(Timestamp, Value)) +     geom_line() + xlab(\"\") + ylab(\"irradiance (W/m2)\") irr_lasthours <- get_timeseries_tsid(\"78930042\", period = \"PT12H30M\") ggplot(irr_lasthours, aes(Timestamp, Value)) +     geom_line() + xlab(\"\") + ylab(\"irradiance (W/m2)\") irr_2014 <- get_timeseries_tsid(\"78930042\",                                  from = \"2014-07-01\",                                  to = \"2014-08-01\") ggplot(irr_2014, aes(Timestamp, Value)) +     geom_line() + xlab(\"\") + ylab(\"irradiance (W/m2)\") irr_2014day <- get_timeseries_tsid(\"78930042\",                                  from = \"2014-07-01\",                                  period = \"P1D\") ggplot(irr_2014day, aes(Timestamp, Value)) +     geom_line() + xlab(\"\") + ylab(\"irradiance (W/m2)\")"},{"path":"https://docs.ropensci.org/wateRinfo/articles/download_timeseries_batch.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Download time series from multiple stations/variables","text":"many studies, interest user download batch time series following selection criterion. Examples : downloading air pressure data last day available measurement stations. downloading measured variables frequency 15 minutes given measurement station. vignette, type batch downloads explained, using available functions wateRinfo package combination already existing tidyverse functionalities.","code":"library(dplyr) library(ggplot2)"},{"path":"https://docs.ropensci.org/wateRinfo/articles/download_timeseries_batch.html","id":"download-all-stations-for-a-given-variable","dir":"Articles","previous_headings":"","what":"Download all stations for a given variable","title":"Download time series from multiple stations/variables","text":"Consider scenario: ‚Äúdownloading air pressure data last day available measurement stations‚Äù. can achieve downloading stations information providing air_pressure data (get_stations()) ts_id values resulting data.frame, applying get_timeseries_tsid() function: results tidy data set, can use power ggplot plot data individual measurement stations:","code":"# extract the available stations for a predefined variable variable_of_interest <- \"air_pressure\" stations <- get_stations(variable_of_interest)  # Download the data for a given period for each of the stations air_pressure <- stations %>%     group_by(ts_id) %>%     do(get_timeseries_tsid(.$ts_id, period = \"P1D\", to = \"2017-01-02\")) %>%     ungroup() %>%     left_join(stations, by = \"ts_id\") # create a plot of the individual datasets air_pressure %>%      ggplot(aes(x = Timestamp, y = Value)) +      geom_point() + xlab(\"1 Jan 2017\") +      facet_wrap(c(\"station_name\", \"stationparameter_name\")) +      scale_x_datetime(date_labels = \"%H:%M\",                      date_breaks = \"6 hours\")"},{"path":"https://docs.ropensci.org/wateRinfo/articles/download_timeseries_batch.html","id":"download-set-of-variables-from-a-station","dir":"Articles","previous_headings":"","what":"Download set of variables from a station","title":"Download time series from multiple stations/variables","text":"Consider scenario: ‚Äúdownloading soil_moisture (dutch: ‚Äòbodemvocht‚Äô) variables frequency 15 minutes measurement station Liedekerke‚Äù. can achieve downloading variables information Liedekerke station(get_variables()) using station code waterinfo.interface (ME07_006), filtering P.15 time series ts_id values, applying get_timeseries_tsid() function: results tidy data set, can use power ggplot plot data individual measurement stations:","code":"liedekerke_stat <- \"ME07_006\" variables <- get_variables(liedekerke_stat)  variables_to_download <- variables %>%      filter(parametertype_name == \"Bodemvocht\") %>%     filter(ts_name == \"P.15\")  liedekerke <- variables_to_download %>%     group_by(ts_id) %>%     do(get_timeseries_tsid(.$ts_id, period = \"P1M\", from = \"2017-01-01\")) %>%     ungroup() %>%     left_join(variables, by = \"ts_id\") liedekerke %>%      ggplot(aes(x = Timestamp, y = Value)) +      geom_line() + xlab(\"\") + ylab(\"bodemvocht\") +      facet_wrap(c(\"ts_name\", \"stationparameter_name\"), scales = \"free\") +     scale_x_datetime(date_labels = \"%d-%m\\n%Y\",                      date_breaks = \"10 days\")"},{"path":"https://docs.ropensci.org/wateRinfo/articles/wateRinfo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to downloading time series data from waterinfo.be","text":"waterinfo.API uses system identifiers, called ts_id define individual time series. example, identifier ts_id = 78073042 corresponds time series air pressure data measurement station Liedekerke, 15 min time resolution. Hence, ts_id identifier defines variable interest measurement station interest specific frequency (e.g.¬†15 min, hourly,‚Ä¶). knowledge proper identifier essential able download corresponding data.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/articles/wateRinfo.html","id":"download-with-known-ts-identifier","dir":"Articles","previous_headings":"","what":"Download with known ts identifier","title":"Introduction to downloading time series data from waterinfo.be","text":"case already know ts_id identifier defines time serie, package provides function get_timeseries_tsid() download specific period time series. example, download air pressure time series data Liedekerke 15 min resolution (ts_id = 78073042) first January 2016: information defining date period download, see vignette. Let‚Äôs visual check data, using ggplot2 package:  , knowing identifier straightforward way downloading time series. order find ts_id identifier, package supports looking identifiers based supported variable name (limited set supported variables VMM) looking identifiers checking variables individual station. methods explained next sections.","code":"my_data <- get_timeseries_tsid(\"78073042\", from = \"2016-01-01\", to = \"2016-01-02\") knitr::kable(head(my_data), align = \"lcc\") ggplot(my_data, aes(Timestamp, Value)) +      geom_line()"},{"path":"https://docs.ropensci.org/wateRinfo/articles/wateRinfo.html","id":"search-identifier-based-on-variable-name","dir":"Articles","previous_headings":"","what":"Search identifier based on variable name","title":"Introduction to downloading time series data from waterinfo.be","text":"number variables, documentation waterinfo.API provides direct overview option available VMM measurement stations, using -called Timeseriesgroup_id. variables, package provides function get_stations() download overview available measurement stations related ts_id identifiers. latter can used download time series. default, expected frequency 15 min frequency time series. However, variables, multiple frequencies supported API. package provides check supported variables frequencies. overview currently supported variables can requested command supported_variables() (either Dutch, nl, English, en). Actually, variables available API (see next section), variables get_stations() function supported (.e.¬†Timeseriesgroup_id documented VMM). check predefined frequencies provided waterinfo.API given variable, supported_frequencies() function available: Hence, air pressure data, 15 min resolution supported. Compared evaporation derived Monteith equation: Multiple resolutions available. Using coarser time resolutions can helpful want download longer time series keeping number records download low (frequency sufficient analysis): interested data Herentals_ME, can use corresponding ts_id download time series PET yearly frequency make plot ggplot:  See vignette understand period = \"P10Y\" format. Remark: get_stations() function works measurement stations belonging VMM meetnet (network), related -called datasource = 1. networks, .e.¬†datasource = 4, enlisting supported. Still, search data provided starting given station name, explained next section.","code":"get_stations(\"air_pressure\") ##      ts_id station_latitude station_longitude station_id station_no ## 1 78124042         51.20300          5.439589      12213   ME11_002 ## 2 78039042         51.24379          4.266912      12208   ME04_001 ## 3 78005042         51.02263          2.970584      12206   ME01_003 ## 4 78107042         51.16224          4.845708      12212   ME10_011 ## 5 78073042         50.88663          4.094898      12210   ME07_006 ## 6 78022042         51.27226          3.728299      12207   ME03_017 ## 7 78090042         50.73795          5.141976      12211   ME09_012 ## 8 78056042         50.86149          3.411318      12209   ME05_019 ##              station_name stationparameter_name parametertype_name ## 1             Overpelt_ME                    Pa                 Pa ## 2              Melsele_ME                    Pa                 Pa ## 3               Zarren_ME                    Pa                 Pa ## 4            Herentals_ME                    Pa                 Pa ## 5           Liedekerke_ME                    Pa                 Pa ## 6            Boekhoute_ME                    Pa                 Pa ## 7 Niel-bij-St.-Truiden_ME                    Pa                 Pa ## 8              Waregem_ME                    Pa                 Pa ##   ts_unitsymbol dataprovider ## 1           hPa          VMM ## 2           hPa          VMM ## 3           hPa          VMM ## 4           hPa          VMM ## 5           hPa          VMM ## 6           hPa          VMM ## 7           hPa          VMM ## 8           hPa          VMM supported_variables(\"en\") %>%      as.list() ## $variable_en ##  [1] \"discharge\"             \"soil_saturation\"       \"soil_moisture\"         ##  [4] \"dew_point_temperature\" \"ground_temperature\"    \"ground_heat\"           ##  [7] \"irradiance\"            \"air_pressure\"          \"air_temperature_175cm\" ## [10] \"rainfall\"              \"relative_humidity\"     \"evaporation_monteith\"  ## [13] \"evaporation_penman\"    \"water_velocity\"        \"water_level\"           ## [16] \"water_temperature\"     \"wind_direction\"        \"wind_speed\" supported_frequencies(variable_name = \"air_pressure\") ## [1] \"15min\" supported_frequencies(variable_name = \"evaporation_monteith\") ## [1] \"15min\" \"day\"   \"month\" \"year\" stations <- get_stations(\"evaporation_monteith\", frequency = \"year\") subset_of_columns <- stations %>% select(ts_id, station_no, station_name,                                           parametertype_name, ts_unitsymbol) knitr::kable(subset_of_columns) pet_yearly <- get_timeseries_tsid(\"94526042\", period = \"P10Y\") pet_yearly %>%      na.omit() %>%     ggplot(aes(Timestamp, Value)) +      geom_bar(stat = \"identity\") +     scale_x_datetime(date_labels = \"%Y\", date_breaks = \"1 year\") +      xlab(\"\") + ylab(\"PET Herentals (mm)\")"},{"path":"https://docs.ropensci.org/wateRinfo/articles/wateRinfo.html","id":"search-identifier-based-on-station-name","dir":"Articles","previous_headings":"","what":"Search identifier based on station name","title":"Introduction to downloading time series data from waterinfo.be","text":"addition option check measurement stations can provide data given variable, package provides function get_variables() get overview available variables given station, using station_no. advantage compared ts_id station_no names provided waterinfo.website exploring data. clicking measurement station map checking time series graph, station_no provided upper left corner brackets. Waterinfo.example printscreen time series , example figure, .e.¬†station_no = zes42a-1066, available time series retrieved using get_variables() command: available number variables depends measurement station. representation standardized also depends type meetnet. Nevertheless, one can derive required ts_id list interpreting field names. Remark datasource can 4 instead 1 specific meetnetten (networks). datasource use printed asking variables station. order download 10 min time series water level data station Sint-Amands tij/Zeeschelde, ts_id = 55419010 can used get_timeseries_tsid() function, taking account datasource = 4 (default 1):  measurement stations, number variables can high (lots precalculated derivative values) extracting required time series identifier always straightforward. example, dat Etikhove/Schuif/Nederaalbeek (K06_221), provides following number variables: measured variables small time resolution interest, filtering P.15 (P.1, P.60,‚Ä¶) help identify measured time series, stations belonging meetnet VMM (datasource = 1): Loading visualizing last day (period P1D) available data water level downstream (Hafw):  can similar filtering check time series stations, example Molenbeek Etikhove: use ts_id code representing discharge create plot discharge storm 2010:","code":"available_variables <- get_variables(\"zes42a-1066\") ## Use datasource: 4 for data requests of this station! available_variables %>% select(ts_id, station_name, ts_name,                                 parametertype_name) ##        ts_id               station_name              ts_name parametertype_name ## 1   55414010 Sint-Amands tij/Zeeschelde           O.Gaugings                  W ## 2   55415010 Sint-Amands tij/Zeeschelde                   RC                  W ## 3   55416010 Sint-Amands tij/Zeeschelde                O.01b                  W ## 4   55421010 Sint-Amands tij/Zeeschelde            HW.KD_NKD                  W ## 5   55424010 Sint-Amands tij/Zeeschelde                Pv.05                  W ## 6   55425010 Sint-Amands tij/Zeeschelde              Pv.HWLW                  W ## 7   55430010 Sint-Amands tij/Zeeschelde                Pv.LW                  W ## 8   55437010 Sint-Amands tij/Zeeschelde           Pv.LW.Lang                  W ## 9   55443010 Sint-Amands tij/Zeeschelde               LW.rco                  W ## 10  55445010 Sint-Amands tij/Zeeschelde               LW.typ                  W ## 11  88620010 Sint-Amands tij/Zeeschelde             Astro.01        W_voorspeld ## 12 113485010 Sint-Amands tij/Zeeschelde         Astro.LW.tpk        W_voorspeld ## 13 113487010 Sint-Amands tij/Zeeschelde          Astro.Pv.LW        W_voorspeld ## 14  55434010 Sint-Amands tij/Zeeschelde          HWLW.Kidigi                  W ## 15  55446010 Sint-Amands tij/Zeeschelde         GaugingsDiff                  W ## 16  55449010 Sint-Amands tij/Zeeschelde               LW.tpk                  W ## 17  89205010 Sint-Amands tij/Zeeschelde             KT-det.O        W_voorspeld ## 18  55429010 Sint-Amands tij/Zeeschelde                Pv.HW                  W ## 19  55435010 Sint-Amands tij/Zeeschelde              Pv.Lang                  W ## 20  55447010 Sint-Amands tij/Zeeschelde                LW.KK                  W ## 21 112685010 Sint-Amands tij/Zeeschelde             Astro.05        W_voorspeld ## 22  55418010 Sint-Amands tij/Zeeschelde                HW.KK                  W ## 23  55419010 Sint-Amands tij/Zeeschelde                Pv.10                  W ## 24  55422010 Sint-Amands tij/Zeeschelde               HW.typ                  W ## 25  55428010 Sint-Amands tij/Zeeschelde        O.TerrainCorr                  W ## 26  55439010 Sint-Amands tij/Zeeschelde        O.HWLW.Kidigi                  W ## 27  58546010 Sint-Amands tij/Zeeschelde              LW.hulp                  W ## 28  94251010 Sint-Amands tij/Zeeschelde        AlarmStatus.O                  W ## 29  84309010 Sint-Amands tij/Zeeschelde      KT-Percentile.O        W_voorspeld ## 30 112686010 Sint-Amands tij/Zeeschelde             Astro.10        W_voorspeld ## 31  55420010 Sint-Amands tij/Zeeschelde               HW.tpk                  W ## 32  55426010 Sint-Amands tij/Zeeschelde               Kidigi                  W ## 33  55436010 Sint-Amands tij/Zeeschelde           Pv.HW.Lang                  W ## 34  55417010 Sint-Amands tij/Zeeschelde                 Base                  W ## 35  55427010 Sint-Amands tij/Zeeschelde              LW.Hist                  W ## 36  55438010 Sint-Amands tij/Zeeschelde           HW.t-h.wdw                  W ## 37  55442010 Sint-Amands tij/Zeeschelde             Gaugings                  W ## 38  55444010 Sint-Amands tij/Zeeschelde           LW.t-h.wdw                  W ## 39  96961010 Sint-Amands tij/Zeeschelde                KT-HW        W_voorspeld ## 40 113486010 Sint-Amands tij/Zeeschelde          Astro.Pv.HW        W_voorspeld ## 41  55423010 Sint-Amands tij/Zeeschelde        GaugingsGDiff                  W ## 42  55431010 Sint-Amands tij/Zeeschelde            Base.Lang                  W ## 43  55432010 Sint-Amands tij/Zeeschelde          O.LW.KD_NKD                  W ## 44  55433010 Sint-Amands tij/Zeeschelde                Model                  W ## 45  55440010 Sint-Amands tij/Zeeschelde              HW.Hist                  W ## 46  88623010 Sint-Amands tij/Zeeschelde           Astro.HWLW        W_voorspeld ## 47  96963010 Sint-Amands tij/Zeeschelde              KT-HWLW        W_voorspeld ## 48  99870010 Sint-Amands tij/Zeeschelde KT-AlarmStatus-Max.O        W_voorspeld ## 49 113484010 Sint-Amands tij/Zeeschelde         Astro.HW.tpk        W_voorspeld ## 50  55441010 Sint-Amands tij/Zeeschelde            LW.KD_NKD                  W ## 51  55448010 Sint-Amands tij/Zeeschelde                   Pv                  W ## 52  55450010 Sint-Amands tij/Zeeschelde          O.HW.KD_NKD                  W ## 53  96864010 Sint-Amands tij/Zeeschelde              KT-Last        W_voorspeld ## 54  96962010 Sint-Amands tij/Zeeschelde                KT-LW        W_voorspeld ## 55 113488010 Sint-Amands tij/Zeeschelde        Astro.Pv.HWLW        W_voorspeld tide_stamands <- get_timeseries_tsid(\"55419010\",                                       from = \"2017-06-01\", to = \"2017-06-05\",                                      datasource = 4) ggplot(tide_stamands, aes(Timestamp, Value)) +      geom_line() + xlab(\"\") + ylab(\"waterlevel\") available_variables <- get_variables(\"K06_221\") ## Use datasource: 1 for data requests of this station! nrow(available_variables) ## [1] 94 available_variables <- get_variables(\"K06_221\") ## Use datasource: 1 for data requests of this station! available_variables %>%      filter(ts_name == \"P.15\") ##                   station_name station_no    ts_id ts_name parametertype_name ## 1 Etikhove/Schuif/Nederaalbeek    K06_221 22322042    P.15                  H ## 2 Etikhove/Schuif/Nederaalbeek    K06_221 22302042    P.15                  H ## 3 Etikhove/Schuif/Nederaalbeek    K06_221 29156042    P.15                  H ## 4 Etikhove/Schuif/Nederaalbeek    K06_221 84094042    P.15 Volume Wachtbekken ## 5 Etikhove/Schuif/Nederaalbeek    K06_221 31882042    P.15                 Hk ##   stationparameter_name ## 1                  Hopw ## 2                Hafw   ## 3    Hafw 100m afwaarts ## 4    Volume_wachtbekken ## 5               Hschuif afw_etikhove <- get_timeseries_tsid(\"22302042\",                                      period = \"P1D\",                                     datasource = 1) # 1 is default  ggplot(afw_etikhove, aes(Timestamp, Value)) +      geom_line() + xlab(\"\") + ylab(\"Volume\") available_variables <- get_variables(\"L06_347\") ## Use datasource: 1 for data requests of this station! available_variables %>%     filter(ts_name == \"P.15\") ##         station_name station_no     ts_id ts_name parametertype_name ## 1 Etikhove/Molenbeek    L06_347 276546042    P.15                  v ## 2 Etikhove/Molenbeek    L06_347 276494042    P.15                  Q ## 3 Etikhove/Molenbeek    L06_347 276277042    P.15                  H ##   stationparameter_name ## 1                     v ## 2                     Q ## 3                     H etikhove <- get_timeseries_tsid(\"276494042\",                                  from = \"2010-11-09\", to = \"2010-11-16\")  ggplot(etikhove, aes(Timestamp, Value)) +      geom_line() + xlab(\"\") + ylab(\"Q (m3/s)\")"},{"path":"https://docs.ropensci.org/wateRinfo/articles/wateRinfo.html","id":"check-the-url-used-to-request-the-data","dir":"Articles","previous_headings":"","what":"Check the URL used to request the data","title":"Introduction to downloading time series data from waterinfo.be","text":"data requests actually call waterinfo.API, call can tested browser well. retrieve URL used request certain data (using get_variables(), get_stations() get_timeseries_tsid()), check comment() attribute returned data.frame, example: ","code":"air_stations <- get_stations(\"air_pressure\") comment(air_stations) ## [1] \"https://download.waterinfo.be/tsmdownload/KiWIS/KiWIS?type=queryServices&service=kisters&request=getTimeseriesValueLayer&datasource=1&timeseriesgroup_id=192918&format=json&metadata=TRUE&md_returnfields=custom_attributes%2Cstation_id%2Cstation_no%2Cstation_name%2Cstationparameter_name%2Cts_unitsymbol%2Cparametertype_name%2Cts_id%2Cca_sta&ca_sta_returnfields=dataprovider\" etikhove <- get_timeseries_tsid(\"276494042\",                                  from = \"2010-11-09\", to = \"2010-11-16\") comment(etikhove) ## [1] \"https://download.waterinfo.be/tsmdownload/KiWIS/KiWIS?type=queryServices&service=kisters&request=getTimeseriesvalues&ts_id=276494042&format=json&datasource=1&returnfields=Timestamp%2CValue%2CQuality%20Code&from=2010-11-09%2000%3A00%3A00&to=2010-11-16%2000%3A00%3A00\""},{"path":"https://docs.ropensci.org/wateRinfo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stijn Van Hoey. Author, maintainer. Willem Maetens. Contributor. Peter Desmet. Contributor. Research Institute Nature Forest (INBO). Copyright holder.            https://www.vlaanderen./inbo/en-gb/ . Funder.            https://lifewatch.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Van Hoey S (2024). wateRinfo: Download Time Series Data Waterinfo.. R package version 0.3.0.9065, https://docs.ropensci.org/wateRinfo, https://github.com/ropensci/wateRinfo.","code":"@Manual{,   title = {wateRinfo: Download Time Series Data from Waterinfo.be},   author = {Stijn {Van Hoey}},   year = {2024},   note = {R package version 0.3.0.9065, https://docs.ropensci.org/wateRinfo},   url = {https://github.com/ropensci/wateRinfo}, }"},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"waterinfo-","dir":"","previous_headings":"","what":"Download Time Series Data from Waterinfo.be","title":"Download Time Series Data from Waterinfo.be","text":"wateRinfo facilitates access waterinfo., website managed Flanders Environment Agency (VMM) Flanders Hydraulics Research. website provides access real-time water weather related environmental variables Flanders (Belgium), rainfall, air pressure, discharge, water level. package provides functions search stations variables, download time series. get started, see: Get started: introduction package‚Äôs main functionalities. Function reference: overview functions. Articles: tutorials use package.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Time Series Data from Waterinfo.be","text":"can install development version wateRinfo GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ropensci/wateRinfo\")  # Or rOpenSci R-universe install.packages(\"wateRinfo\", repos = \"https://ropensci.r-universe.dev\")"},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Download Time Series Data from Waterinfo.be","text":"number supported variables (documented VMM), stations providing time series data given variable can listed command get_stations(). want know supported variables, ask supported variables: Listing available air pressure stations: stations list given variable, represented ts_id. can used download data given period command get_timeseries_tsid(), example Overpelt (ts_id = 78124042): Making plot data ggplot2:  Another option check available variables given station, function get_variables(). Let‚Äôs consider Overpelt (ME11_002) check first ten available variables Overpelt measurement station: Different pre-calculated variables already available ts_id value available download corresponding data. example, DagGem (= daily mean values) RH (= relative humidity), .e.¬†ts_id = 78382042:  Unfortunately, variables documented, check appropriate variable (yet) fully supported package. detailed tutorials available package vignettes!","code":"library(wateRinfo)  supported_variables(\"en\") #>              variable_en #> 1              discharge #> 6        soil_saturation #> 7          soil_moisture #> 8  dew_point_temperature #> 9     ground_temperature #> 10           ground_heat #> 11            irradiance #> 12          air_pressure #> 13 air_temperature_175cm #> 14              rainfall #> 20     relative_humidity #> 21  evaporation_monteith #> 25    evaporation_penman #> 29        water_velocity #> 34           water_level #> 39     water_temperature #> 40        wind_direction #> 41            wind_speed get_stations(\"air_pressure\") #>      ts_id station_latitude station_longitude station_id station_no #> 1 78124042         51.20300          5.439589      12213   ME11_002 #> 2 78005042         51.02263          2.970584      12206   ME01_003 #> 3 78039042         51.24379          4.266912      12208   ME04_001 #> 4 78073042         50.88663          4.094898      12210   ME07_006 #> 5 78107042         51.16224          4.845708      12212   ME10_011 #> 6 78022042         51.27226          3.728299      12207   ME03_017 #> 7 78090042         50.73795          5.141976      12211   ME09_012 #> 8 78056042         50.86149          3.411318      12209   ME05_019 #>              station_name stationparameter_name parametertype_name #> 1             Overpelt_ME                    Pa                 Pa #> 2               Zarren_ME                    Pa                 Pa #> 3              Melsele_ME                    Pa                 Pa #> 4           Liedekerke_ME                    Pa                 Pa #> 5            Herentals_ME                    Pa                 Pa #> 6            Boekhoute_ME                    Pa                 Pa #> 7 Niel-bij-St.-Truiden_ME                    Pa                 Pa #> 8              Waregem_ME                    Pa                 Pa #>   ts_unitsymbol dataprovider #> 1           hPa          VMM #> 2           hPa          VMM #> 3           hPa          VMM #> 4           hPa          VMM #> 5           hPa          VMM #> 6           hPa          VMM #> 7           hPa          VMM #> 8           hPa          VMM overpelt_pressure <- get_timeseries_tsid(\"78124042\",                                           from = \"2017-04-01\",                                           to = \"2017-04-02\") head(overpelt_pressure) #>             Timestamp  Value Quality Code #> 1 2017-04-01 00:00:00 1008.8          130 #> 2 2017-04-01 00:15:00 1008.7          130 #> 3 2017-04-01 00:30:00 1008.7          130 #> 4 2017-04-01 00:45:00 1008.6          130 #> 5 2017-04-01 01:00:00 1008.5          130 #> 6 2017-04-01 01:15:00 1008.4          130 library(ggplot2) ggplot(overpelt_pressure, aes(x = Timestamp, y = Value)) +      geom_line() +      xlab(\"\") + ylab(\"hPa\") +      scale_x_datetime(date_labels = \"%H:%M\\n%Y-%m-%d\", date_breaks = \"6 hours\") vars_overpelt <- get_variables(\"ME11_002\") head(vars_overpelt, 10) #>    station_name station_no    ts_id    ts_name parametertype_name #> 1   Overpelt_ME   ME11_002 78522042 HydJaarMax                 Ts #> 2   Overpelt_ME   ME11_002 78523042 HydJaarMin                 Ts #> 3   Overpelt_ME   ME11_002 78693042       P.15                 Ud #> 4   Overpelt_ME   ME11_002 94682042   MaandMin                 Ta #> 5   Overpelt_ME   ME11_002 78531042       P.10                 Ts #> 6   Overpelt_ME   ME11_002 78518042     DagGem                 Ts #> 7   Overpelt_ME   ME11_002 78521042 HydJaarGem                 Ts #> 8   Overpelt_ME   ME11_002 78524042 KalJaarGem                 Ts #> 9   Overpelt_ME   ME11_002 78533042       P.60                 Ts #> 10  Overpelt_ME   ME11_002 78694042      Pv.15                 Ud #>    stationparameter_name #> 1                  SoilT #> 2                  SoilT #> 3                   WDir #> 4                     Ta #> 5                  SoilT #> 6                  SoilT #> 7                  SoilT #> 8                  SoilT #> 9                  SoilT #> 10                  WDir overpelt_rh_daily <- get_timeseries_tsid(\"78382042\",                                           from = \"2017-04-01\",                                           to = \"2017-04-30\") head(overpelt_rh_daily) #>             Timestamp Value Quality Code #> 1 2017-04-01 23:00:00 80.19          130 #> 2 2017-04-02 23:00:00 89.58          130 #> 3 2017-04-03 23:00:00 79.56          130 #> 4 2017-04-04 23:00:00 84.13          130 #> 5 2017-04-05 23:00:00 84.19          130 #> 6 2017-04-06 23:00:00 82.71          130 ggplot(overpelt_rh_daily, aes(x = Timestamp, y = Value)) +      geom_line() +      xlab(\"\") + ylab(\" RH (%)\") +      scale_x_datetime(date_labels = \"%b-%d\\n%Y\", date_breaks = \"5 days\")"},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"note-on-restrictions-of-the-downloads","dir":"","previous_headings":"","what":"Note on restrictions of the downloads","title":"Download Time Series Data from Waterinfo.be","text":"amount data downloaded waterinfo.limited via credit system. need get token right away download data. limited irregular downloads, token required. require extended data requests, please request download token waterinfo.site administrators via e-mail address hydrometrie@waterinfo.statement data frequently like download data. receive client-credit code can used obtain token valid 24 hours, token can refreshed client-credit code. Get token client-credit code: (limited client-credit code testing purposes) Receive information validity token: Check token expires: Use token retrieving data:","code":"client <- paste0(\"MzJkY2VlY2UtODI2Yy00Yjk4LTljMmQtYjE2OTc4ZjBjYTZhOjRhZGE4\",                  \"NzFhLTk1MjgtNGI0ZC1iZmQ1LWI1NzBjZThmNGQyZA==\") my_token <- get_token(client = client) print(my_token) #> Token: #> eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiNTFlM2U5MC1iY2FjLTQ4Y2ItYmNmOS0wM2NmMDIwODA5MDIiLCJpYXQiOjE2NTcyMTI0NTAsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9LaVdlYlBvcnRhbC9hdXRoIiwiYXVkIjoiMzJkY2VlY2UtODI2Yy00Yjk4LTljMmQtYjE2OTc4ZjBjYTZhIiwiZXhwIjoxNjU3Mjk4ODUwfQ.PQv_g2cfrOCdfcpmINZncTAbZgwchzxXwmSjlJU3WIk #>  #> Attributes: #>  url: http://download.waterinfo.be/kiwis-auth/token #>  type: Bearer #>  expires: 2022-07-08 18:47:30 CEST is.expired(my_token) #> [1] FALSE expires.in(my_token) #> Time difference of 23.99999 hours get_stations(variable_name = \"verdamping_monteith\", token = my_token) #>      ts_id station_latitude station_longitude station_id station_no #> 1 94310042         51.02263          2.970584      12206   ME01_003 #> 2 94516042         50.73795          5.141976      12211   ME09_012 #> 3 94530042         51.16224          4.845708      12212   ME10_011 #> 4 94544042         51.20300          5.439589      12213   ME11_002 #> 5 94474042         51.24379          4.266912      12208   ME04_001 #> 6 94502042         50.88663          4.094898      12210   ME07_006 #> 7 94460042         51.27226          3.728299      12207   ME03_017 #> 8 94488042         50.86149          3.411318      12209   ME05_019 #>              station_name stationparameter_name parametertype_name #> 1               Zarren_ME                   pET                PET #> 2 Niel-bij-St.-Truiden_ME                   pET                PET #> 3            Herentals_ME                   pET                PET #> 4             Overpelt_ME                   pET                PET #> 5              Melsele_ME                   pET                PET #> 6           Liedekerke_ME                   pET                PET #> 7            Boekhoute_ME                   pET                PET #> 8              Waregem_ME                   pET                PET #>   ts_unitsymbol dataprovider #> 1            mm          VMM #> 2            mm          VMM #> 3            mm          VMM #> 4            mm          VMM #> 5            mm          VMM #> 6            mm          VMM #> 7            mm          VMM #> 8            mm          VMM"},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"other-clients","dir":"","previous_headings":"","what":"Other clients","title":"Download Time Series Data from Waterinfo.be","text":"Besides wateRinfo R client gather data waterinfo., also Python client available. pywaterinfo package contains similar functionalities. Flanders Hydraulics Research center also distributes clients R, Python Matlab upon request download data share waterinfo.. information, contact directly via hic@vlaanderen..","code":""},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Download Time Series Data from Waterinfo.be","text":"package just small wrapper around waterinfo.facilitate researchers stakeholders downloading data waterinfo.. availability data made possible de Vlaamse Milieumaatschappij, Waterbouwkundig Laboratorium, Maritieme Dienstverlening & Kust, Waterwegen en Zeekanaal NV en De Scheepvaart NV.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Download Time Series Data from Waterinfo.be","text":"welcome contributions including bug reports. License: MIT Get citation information wateRinfo R citation(\"wateRinfo\"). Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/air_pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Air pressure data of January 1st, 2017 ‚Äî air_pressure","title":"Air pressure data of January 1st, 2017 ‚Äî air_pressure","text":"dataset compiled downloading 1 day air pressure data available stations Waterinfo.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/air_pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Air pressure data of January 1st, 2017 ‚Äî air_pressure","text":"","code":"air_pressure"},{"path":"https://docs.ropensci.org/wateRinfo/reference/air_pressure.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Air pressure data of January 1st, 2017 ‚Äî air_pressure","text":"data frame 710 rows 13 variables: ts_id identifier downloaded time serie Timestamp datetime Value measured value variable Quality Code Quality code measurement station_latitude latitude coordinate station_longitude longitude coordinate station_id identifier measurement station station_no short code name measurement station station_name full name measurement station stationparameter_name parameter name station level parametertype_name parameter type name ts_unitsymbol unit variable dataprovider provider time series value","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/air_pressure.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Air pressure data of January 1st, 2017 ‚Äî air_pressure","text":"https://www.waterinfo./","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/call_waterinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"http call to waterinfo.be ‚Äî call_waterinfo","title":"http call to waterinfo.be ‚Äî call_waterinfo","text":"General call used request information data waterinfo., providing error handling json parsing","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/call_waterinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"http call to waterinfo.be ‚Äî call_waterinfo","text":"","code":"call_waterinfo(query, base_url = \"vmm\", token = NULL)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/call_waterinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"http call to waterinfo.be ‚Äî call_waterinfo","text":"query list query options used together base string base_url str vmm | hic | pro, default download defined token token use call (optional, can retrieved via get_token)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/call_waterinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"http call to waterinfo.be ‚Äî call_waterinfo","text":"waterinfo_api class object content info call","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the date can be parsed to a datetime object in R ‚Äî check_date_format","title":"Check if the date can be parsed to a datetime object in R ‚Äî check_date_format","text":"date already datetime object (\"POSIXct\" \"POSIXt\"), object returned","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the date can be parsed to a datetime object in R ‚Äî check_date_format","text":"","code":"check_date_format(datetime)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_date_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the date can be parsed to a datetime object in R ‚Äî check_date_format","text":"datetime string representation date","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_date_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the date can be parsed to a datetime object in R ‚Äî check_date_format","text":"POSIXct date-time object date valid representation","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_period_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Check period string format ‚Äî check_period_format","title":"Check period string format ‚Äî check_period_format","text":"Check format period conform specifications VMM","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_period_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check period string format ‚Äî check_period_format","text":"","code":"check_period_format(period_string)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_period_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check period string format ‚Äî check_period_format","text":"period_string input string according format required waterinfo: period string provided P#Y#M#DT#H#M#S, P defines `Period`, # integer value codes define number ... Y - years M - months D - days T required information sub-day resolution present H - hours D - days M - minutes S - seconds Instead D (days), usage W - weeks possible well Examples valid period strings: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_period_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check period string format ‚Äî check_period_format","text":"str period string valid","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/check_period_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check period string format ‚Äî check_period_format","text":"","code":"check_period_format(\"P2DT6H\") # period of 2 days and 6 hours #> [1] \"P2DT6H\" check_period_format(\"P3D\") # period of 3 days #> [1] \"P3D\""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of stations for a variable ‚Äî get_stations","title":"Get list of stations for a variable ‚Äî get_stations","text":"given timeseriesgroup (variable), provide list measurement stations providing data. overview variables provided function supported_variables.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of stations for a variable ‚Äî get_stations","text":"","code":"get_stations(variable_name = NULL, frequency = \"15min\", token = NULL)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get list of stations for a variable ‚Äî get_stations","text":"data.frame 10 variables: ts_id Unique timeseries identifier access time series data   corresponding combination station, measured variable   frequency. station_latitude Latitude coordinates station (WGS84) station_longitude Longitude coordinates station (WGS84) station_id Identifier station used waterinfo   backend station_no Station ID provided waterinfo.website. station_name Official name measurement station. stationparameter_name Station specific variable description. parametertype_name Measured variable description. ts_unitsymbol Unit variable. dataprovider Data provider time series data. URL specific request provided comment attribute returned data.frame. Use comment(df) get request URL.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of stations for a variable ‚Äî get_stations","text":"variable_name char valid nam available variable timeseriesgroup frequency char valid frequency given variable, variables, 15min frequency available token token use call (optional, can retrieved via get_token)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of stations for a variable ‚Äî get_stations","text":"data.frame overview available stations requested variable","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get list of stations for a variable ‚Äî get_stations","text":"moment, works measurement stations VMM (meetnet 1), stations measurement data sources included list","code":""},{"path":[]},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of stations for a variable ‚Äî get_stations","text":"","code":"get_stations('irradiance') #>      ts_id station_latitude station_longitude station_id station_no #> 1 78845042         51.27226          3.728299      12207   ME03_017 #> 2 78879042         50.86149          3.411318      12209   ME05_019 #> 3 78947042         51.20300          5.439589      12213   ME11_002 #> 4 78913042         50.73795          5.141976      12211   ME09_012 #> 5 78862042         51.24379          4.266912      12208   ME04_001 #> 6 78896042         50.88663          4.094898      12210   ME07_006 #> 7 78930042         51.16224          4.845708      12212   ME10_011 #>              station_name stationparameter_name parametertype_name #> 1            Boekhoute_ME                   Rad                 Rn #> 2              Waregem_ME                   Rad                 Rn #> 3             Overpelt_ME                   Rad                 Rn #> 4 Niel-bij-St.-Truiden_ME                   Rad                 Rn #> 5              Melsele_ME                   Rad                 Rn #> 6           Liedekerke_ME                   Rad                 Rn #> 7            Herentals_ME                   Rad                 Rn #>   ts_unitsymbol dataprovider #> 1          W/m¬≤          VMM #> 2          W/m¬≤          VMM #> 3          W/m¬≤          VMM #> 4          W/m¬≤          VMM #> 5          W/m¬≤          VMM #> 6          W/m¬≤          VMM #> 7          W/m¬≤          VMM get_stations('soil_saturation') #>        ts_id station_latitude station_longitude station_id station_no #> 1  241832042         51.08705          3.656799     307321    B03_005 #> 2  241952042         51.24379          4.266912     307312    B04_001 #> 3  243519042         51.24379          4.266912     307312    B04_001 #> 4  242192042         51.29507          4.910008     307331    B10_042 #> 5  243639042         51.29507          4.910008     307331    B10_042 #> 6  242072042         50.80630          4.969030     307329    B09_032 #> 7  243444042         50.87758          4.666340     307327    B08_031 #> 8  255019042         50.88663          4.094898     307314    B07_006 #> 9  241922042         51.22551          3.007397     307319    B02_008 #> 10 242162042         51.38797          4.705126     307332    B11_007 #> 11 243414042         51.28378          3.271242     307320    B02_030 #> 12 243534042         51.20300          5.439589     307317    B11_002 #> 13 241892042         50.82488          2.670910     307318    B01_037 #> 14 243459042         50.80959          5.674667     307333    B11_024 #> 15 255017042         51.27226          3.728299     307311    B03_017 #> 16 241772042         51.05209          5.120756     307330    B09_034 #> 17 242132042         51.16224          4.845708     307316    B10_011 #> 18 242012042         51.28378          3.271242     307320    B02_030 #> 19 243579042         50.93779          3.171750     307322    B05_039 #> 20 242222042         51.20300          5.439589     307317    B11_002 #> 21 243384042         51.03254          4.510400     307326    B08_018 #> 22 241676042         51.03254          4.510400     307326    B08_018 #> 23 255484042         50.88663          4.094898     307314    B07_006 #> 24 243429042         51.16224          4.845708     307316    B10_011 #> 25 241862042         50.90567          3.655040     307324    B06_040 #> 26 241742042         50.87758          4.666340     307327    B08_031 #> 27 243669042         50.90567          3.655040     307324    B06_040 #> 28 242102042         50.80959          5.674667     307333    B11_024 #> 29 243565042         50.93779          3.171750     307322    B05_039 #> 30 251706042         51.27226          3.728299     307311    B03_017 #> 31 241694042         51.00600          4.092621     307325    B07_022 #> 32 243594042         51.05209          5.120756     307330    B09_034 #>     station_name    stationparameter_name parametertype_name ts_unitsymbol #> 1  Vinderhoute_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 2      Melsele_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 3      Melsele_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 4    Vosselaar_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 5    Vosselaar_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 6       Tienen_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 7     Heverlee_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 8   Liedekerke_B Bodemverzadiging(0-70cm)    Soil Saturation             % #> 9   Klemskerke_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 10    Loenhout_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 11     Dudzele_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 12    Overpelt_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 13   Poperinge_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 14       Kanne_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 15   Boekhoute_B Bodemverzadiging(0-70cm)    Soil Saturation             % #> 16 Tessenderlo_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 17   Herentals_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 18     Dudzele_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 19   Roeselare_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 20    Overpelt_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 21   Bonheiden_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 22   Bonheiden_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 23  Liedekerke_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 24   Herentals_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 25      Zingem_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 26    Heverlee_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 27      Zingem_B Bodemverzadiging(0-60cm)    Soil Saturation             % #> 28       Kanne_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 29   Roeselare_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 30   Boekhoute_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 31 Denderbelle_B Bodemverzadiging(0-10cm)    Soil Saturation             % #> 32 Tessenderlo_B Bodemverzadiging(0-60cm)    Soil Saturation             % #>    dataprovider #> 1           VMM #> 2           VMM #> 3           VMM #> 4           VMM #> 5           VMM #> 6           VMM #> 7           VMM #> 8           VMM #> 9           VMM #> 10          VMM #> 11          VMM #> 12          VMM #> 13          VMM #> 14          VMM #> 15          VMM #> 16          VMM #> 17          VMM #> 18          VMM #> 19          VMM #> 20          VMM #> 21          VMM #> 22          VMM #> 23          VMM #> 24          VMM #> 25          VMM #> 26          VMM #> 27          VMM #> 28          VMM #> 29          VMM #> 30          VMM #> 31          VMM #> 32          VMM"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_timeseries_tsid.html","id":null,"dir":"Reference","previous_headings":"","what":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","title":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","text":"Using ts_id codes  providing given date period, download corresponding time series waterinfo.website","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_timeseries_tsid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","text":"","code":"get_timeseries_tsid(   ts_id,   period = NULL,   from = NULL,   to = NULL,   datasource = 1,   token = NULL )"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_timeseries_tsid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","text":"data.frame 3 variables: Timestamp Datetime measurement. Value Measured value. Quality Code Quality code measurement, dependent   data source used: VMM Quality Code Interpretation (datasource 1) 10/110 - Excellent 30/100/130 - Good 50/150 - Moderate 70/170 - Poor 80/180 - Estimated 90/190 - Suspect 220 - Default -1 - Missing HIC Quality Code Interpretation (datasource 2) 40 - Good 80 - Estimated 120 - Suspect 200 - Unchecked 60 - Complete 160 - Incomplete -1 - Missing Aggregated timeseries 40 - Good 100 - Estimated 120 - Suspect 200 - Unchecked -1 - Missing  URL specific request provided comment attribute returned data.frame. Use comment(df) get request URL.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_timeseries_tsid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","text":"ts_id waterinfo.database ts_id, defining timeserie variable frequency defined. period input string according format required waterinfo: De period string provided P#Y#M#DT#H#M#S, P defines `Period`, # integer value codes define number ... Y - years M - months D - days T required information sub-day resolution present H - hours D - days M - minutes S - seconds Instead D (days), usage W - weeks possible well Examples valid period strings: P3D, P1Y, P1DT12H, PT6H, P1Y6M3DT4H20M30S. date datestring start time series date datestring end time series datasource int [0-4] defines `meetnet` measurement station part . VMM based stations net '1', MOW-HIC net '2' token token use call (optional, can retrieved via get_token)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_timeseries_tsid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","text":"data.frame timestamps, values quality code","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_timeseries_tsid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download timeseries data from waterinfo.be ‚Äî get_timeseries_tsid","text":"","code":"get_timeseries_tsid(\"35055042\", from = \"2017-01-01\", to = \"2017-01-02\") #>              Timestamp Value Quality Code #> 1  2016-12-31 23:00:00  0.00          130 #> 2  2016-12-31 23:15:00  0.00          130 #> 3  2016-12-31 23:30:00  0.00          130 #> 4  2016-12-31 23:45:00  0.00          130 #> 5  2017-01-01 00:00:00  0.00          130 #> 6  2017-01-01 00:15:00  0.00          130 #> 7  2017-01-01 00:30:00  0.00          130 #> 8  2017-01-01 00:45:00  0.00          130 #> 9  2017-01-01 01:00:00  0.00          130 #> 10 2017-01-01 01:15:00  0.00          130 #> 11 2017-01-01 01:30:00  0.00          130 #> 12 2017-01-01 01:45:00  0.00          130 #> 13 2017-01-01 02:00:00  0.00          130 #> 14 2017-01-01 02:15:00  0.00          130 #> 15 2017-01-01 02:30:00  0.00          130 #> 16 2017-01-01 02:45:00  0.00          130 #> 17 2017-01-01 03:00:00  0.00          130 #> 18 2017-01-01 03:15:00  0.00          130 #> 19 2017-01-01 03:30:00  0.00          130 #> 20 2017-01-01 03:45:00  0.00          130 #> 21 2017-01-01 04:00:00  0.00          130 #> 22 2017-01-01 04:15:00  0.00          130 #> 23 2017-01-01 04:30:00  0.00          130 #> 24 2017-01-01 04:45:00  0.00          130 #> 25 2017-01-01 05:00:00  0.00          130 #> 26 2017-01-01 05:15:00  0.00          130 #> 27 2017-01-01 05:30:00  0.00          130 #> 28 2017-01-01 05:45:00  0.00          130 #> 29 2017-01-01 06:00:00  0.00          130 #> 30 2017-01-01 06:15:00  0.00          130 #> 31 2017-01-01 06:30:00  0.00          130 #> 32 2017-01-01 06:45:00  0.00          130 #> 33 2017-01-01 07:00:00  0.00          130 #> 34 2017-01-01 07:15:00  0.00          130 #> 35 2017-01-01 07:30:00  0.00          130 #> 36 2017-01-01 07:45:00  0.00          130 #> 37 2017-01-01 08:00:00  0.00          130 #> 38 2017-01-01 08:15:00  0.00          130 #> 39 2017-01-01 08:30:00  0.00          130 #> 40 2017-01-01 08:45:00  0.00          130 #> 41 2017-01-01 09:00:00  0.00          130 #> 42 2017-01-01 09:15:00  0.00          130 #> 43 2017-01-01 09:30:00  0.00          130 #> 44 2017-01-01 09:45:00  0.00          130 #> 45 2017-01-01 10:00:00  0.00          130 #> 46 2017-01-01 10:15:00  0.00          130 #> 47 2017-01-01 10:30:00  0.00          130 #> 48 2017-01-01 10:45:00  0.00          130 #> 49 2017-01-01 11:00:00  0.00          130 #> 50 2017-01-01 11:15:00  0.00          130 #> 51 2017-01-01 11:30:00  0.00          130 #> 52 2017-01-01 11:45:00  0.00          130 #> 53 2017-01-01 12:00:00  0.00          130 #> 54 2017-01-01 12:15:00  0.00          130 #> 55 2017-01-01 12:30:00  0.00          130 #> 56 2017-01-01 12:45:00  0.00          130 #> 57 2017-01-01 13:00:00  0.00          130 #> 58 2017-01-01 13:15:00  0.00          130 #> 59 2017-01-01 13:30:00  0.00          130 #> 60 2017-01-01 13:45:00  0.00          130 #> 61 2017-01-01 14:00:00  0.00          130 #> 62 2017-01-01 14:15:00  0.00          130 #> 63 2017-01-01 14:30:00  0.00          130 #> 64 2017-01-01 14:45:00  0.00          130 #> 65 2017-01-01 15:00:00  0.00          130 #> 66 2017-01-01 15:15:00  0.00          130 #> 67 2017-01-01 15:30:00  0.00          130 #> 68 2017-01-01 15:45:00  0.00          130 #> 69 2017-01-01 16:00:00  0.00          130 #> 70 2017-01-01 16:15:00  0.00          130 #> 71 2017-01-01 16:30:00  0.00          130 #> 72 2017-01-01 16:45:00  0.00          130 #> 73 2017-01-01 17:00:00  0.00          130 #> 74 2017-01-01 17:15:00  0.00          130 #> 75 2017-01-01 17:30:00  0.00          130 #> 76 2017-01-01 17:45:00  0.03          130 #> 77 2017-01-01 18:00:00  0.00          130 #> 78 2017-01-01 18:15:00  0.04          130 #> 79 2017-01-01 18:30:00  0.00          130 #> 80 2017-01-01 18:45:00  0.03          130 #> 81 2017-01-01 19:00:00  0.00          130 #> 82 2017-01-01 19:15:00  0.03          130 #> 83 2017-01-01 19:30:00  0.03          130 #> 84 2017-01-01 19:45:00  0.00          130 #> 85 2017-01-01 20:00:00  0.03          130 #> 86 2017-01-01 20:15:00  0.00          130 #> 87 2017-01-01 20:30:00  0.00          130 #> 88 2017-01-01 20:45:00  0.00          130 #> 89 2017-01-01 21:00:00  0.00          130 #> 90 2017-01-01 21:15:00  0.03          130 #> 91 2017-01-01 21:30:00  0.00          130 #> 92 2017-01-01 21:45:00  0.00          130 #> 93 2017-01-01 22:00:00  0.00          130 #> 94 2017-01-01 22:15:00  0.11          130 #> 95 2017-01-01 22:30:00  0.82          130 #> 96 2017-01-01 22:45:00  0.69          130 #> 97 2017-01-01 23:00:00  0.34          130 get_timeseries_tsid(\"5156042\", period = \"P3D\") #>               Timestamp  Value Quality Code #> 1   2024-02-26 06:00:00 18.260          110 #> 2   2024-02-26 06:15:00 18.261          110 #> 3   2024-02-26 06:30:00 18.262          110 #> 4   2024-02-26 06:45:00 18.262          110 #> 5   2024-02-26 07:00:00 18.263          110 #> 6   2024-02-26 07:15:00 18.263          110 #> 7   2024-02-26 07:30:00 18.264          110 #> 8   2024-02-26 07:45:00 18.264          110 #> 9   2024-02-26 08:00:00 18.265          110 #> 10  2024-02-26 08:15:00 18.266          110 #> 11  2024-02-26 08:30:00 18.266          110 #> 12  2024-02-26 08:45:00 18.267          110 #> 13  2024-02-26 09:00:00 18.268          110 #> 14  2024-02-26 09:15:00 18.268          110 #> 15  2024-02-26 09:30:00 18.269          110 #> 16  2024-02-26 09:45:00 18.271          110 #> 17  2024-02-26 10:00:00 18.272          110 #> 18  2024-02-26 10:15:00 18.275          110 #> 19  2024-02-26 10:30:00 18.278          110 #> 20  2024-02-26 10:45:00 18.281          110 #> 21  2024-02-26 11:00:00 18.284          110 #> 22  2024-02-26 11:15:00 18.287          110 #> 23  2024-02-26 11:30:00 18.291          110 #> 24  2024-02-26 11:45:00 18.296          110 #> 25  2024-02-26 12:00:00 18.301          110 #> 26  2024-02-26 12:15:00 18.306          110 #> 27  2024-02-26 12:30:00 18.315          110 #> 28  2024-02-26 12:45:00 18.328          110 #> 29  2024-02-26 13:00:00 18.340          110 #> 30  2024-02-26 13:15:00 18.351          110 #> 31  2024-02-26 13:30:00 18.362          110 #> 32  2024-02-26 13:45:00 18.373          110 #> 33  2024-02-26 14:00:00 18.382          110 #> 34  2024-02-26 14:15:00 18.392          110 #> 35  2024-02-26 14:30:00 18.401          110 #> 36  2024-02-26 14:45:00 18.409          110 #> 37  2024-02-26 15:00:00 18.417          110 #> 38  2024-02-26 15:15:00 18.425          110 #> 39  2024-02-26 15:30:00 18.433          110 #> 40  2024-02-26 15:45:00 18.440          110 #> 41  2024-02-26 16:00:00 18.447          110 #> 42  2024-02-26 16:15:00 18.453          110 #> 43  2024-02-26 16:30:00 18.459          110 #> 44  2024-02-26 16:45:00 18.464          110 #> 45  2024-02-26 17:00:00 18.470          110 #> 46  2024-02-26 17:15:00 18.476          110 #> 47  2024-02-26 17:30:00 18.481          110 #> 48  2024-02-26 17:45:00 18.487          110 #> 49  2024-02-26 18:00:00 18.491          110 #> 50  2024-02-26 18:15:00 18.496          110 #> 51  2024-02-26 18:30:00 18.501          110 #> 52  2024-02-26 18:45:00 18.505          110 #> 53  2024-02-26 19:00:00 18.508          110 #> 54  2024-02-26 19:15:00 18.511          110 #> 55  2024-02-26 19:30:00 18.513          110 #> 56  2024-02-26 19:45:00 18.516          110 #> 57  2024-02-26 20:00:00 18.518          110 #> 58  2024-02-26 20:15:00 18.520          110 #> 59  2024-02-26 20:30:00 18.522          110 #> 60  2024-02-26 20:45:00 18.524          110 #> 61  2024-02-26 21:00:00 18.526          110 #> 62  2024-02-26 21:15:00 18.527          110 #> 63  2024-02-26 21:30:00 18.528          110 #> 64  2024-02-26 21:45:00 18.530          110 #> 65  2024-02-26 22:00:00 18.531          110 #> 66  2024-02-26 22:15:00 18.532          110 #> 67  2024-02-26 22:30:00 18.533          110 #> 68  2024-02-26 22:45:00 18.534          110 #> 69  2024-02-26 23:00:00 18.535          110 #> 70  2024-02-26 23:15:00 18.536          110 #> 71  2024-02-26 23:30:00 18.537          110 #> 72  2024-02-26 23:45:00 18.538          110 #> 73  2024-02-27 00:00:00 18.538          110 #> 74  2024-02-27 00:15:00 18.539          110 #> 75  2024-02-27 00:30:00 18.539          110 #> 76  2024-02-27 00:45:00 18.539          110 #> 77  2024-02-27 01:00:00 18.540          110 #> 78  2024-02-27 01:15:00 18.540          110 #> 79  2024-02-27 01:30:00 18.540          110 #> 80  2024-02-27 01:45:00 18.540          110 #> 81  2024-02-27 02:00:00 18.540          110 #> 82  2024-02-27 02:15:00 18.540          110 #> 83  2024-02-27 02:30:00 18.539          110 #> 84  2024-02-27 02:45:00 18.539          110 #> 85  2024-02-27 03:00:00 18.539          110 #> 86  2024-02-27 03:15:00 18.539          110 #> 87  2024-02-27 03:30:00 18.538          110 #> 88  2024-02-27 03:45:00 18.538          110 #> 89  2024-02-27 04:00:00 18.537          110 #> 90  2024-02-27 04:15:00 18.536          110 #> 91  2024-02-27 04:30:00 18.536          110 #> 92  2024-02-27 04:45:00 18.536          110 #> 93  2024-02-27 05:00:00 18.536          110 #> 94  2024-02-27 05:15:00 18.536          110 #> 95  2024-02-27 05:30:00 18.536          110 #> 96  2024-02-27 05:45:00 18.537          110 #> 97  2024-02-27 06:00:00 18.539          110 #> 98  2024-02-27 06:15:00 18.540          110 #> 99  2024-02-27 06:30:00 18.539          110 #> 100 2024-02-27 06:45:00 18.539          110 #> 101 2024-02-27 07:00:00 18.538          110 #> 102 2024-02-27 07:15:00 18.538          110 #> 103 2024-02-27 07:30:00 18.537          110 #> 104 2024-02-27 07:45:00 18.536          110 #> 105 2024-02-27 08:00:00 18.535          110 #> 106 2024-02-27 08:15:00 18.533          110 #> 107 2024-02-27 08:30:00 18.532          110 #> 108 2024-02-27 08:45:00 18.531          110 #> 109 2024-02-27 09:00:00 18.530          110 #> 110 2024-02-27 09:15:00 18.529          110 #> 111 2024-02-27 09:30:00 18.528          110 #> 112 2024-02-27 09:45:00 18.527          110 #> 113 2024-02-27 10:00:00 18.526          110 #> 114 2024-02-27 10:15:00 18.525          110 #> 115 2024-02-27 10:30:00 18.523          110 #> 116 2024-02-27 10:45:00 18.522          110 #> 117 2024-02-27 11:00:00 18.521          110 #> 118 2024-02-27 11:15:00 18.519          110 #> 119 2024-02-27 11:30:00 18.518          110 #> 120 2024-02-27 11:45:00 18.517          110 #> 121 2024-02-27 12:00:00 18.516          110 #> 122 2024-02-27 12:15:00 18.514          110 #> 123 2024-02-27 12:30:00 18.514          110 #> 124 2024-02-27 12:45:00 18.512          110 #> 125 2024-02-27 13:00:00 18.511          110 #> 126 2024-02-27 13:15:00 18.510          110 #> 127 2024-02-27 13:30:00 18.508          110 #> 128 2024-02-27 13:45:00 18.507          110 #> 129 2024-02-27 14:00:00 18.505          110 #> 130 2024-02-27 14:15:00 18.504          110 #> 131 2024-02-27 14:30:00 18.502          110 #> 132 2024-02-27 14:45:00 18.501          110 #> 133 2024-02-27 15:00:00 18.499          110 #> 134 2024-02-27 15:15:00 18.498          110 #> 135 2024-02-27 15:30:00 18.497          110 #> 136 2024-02-27 15:45:00 18.495          110 #> 137 2024-02-27 16:00:00 18.494          110 #> 138 2024-02-27 16:15:00 18.492          110 #> 139 2024-02-27 16:30:00 18.491          110 #> 140 2024-02-27 16:45:00 18.489          110 #> 141 2024-02-27 17:00:00 18.488          110 #> 142 2024-02-27 17:15:00 18.487          110 #> 143 2024-02-27 17:30:00 18.485          110 #> 144 2024-02-27 17:45:00 18.484          110 #> 145 2024-02-27 18:00:00 18.482          110 #> 146 2024-02-27 18:15:00 18.481          110 #> 147 2024-02-27 18:30:00 18.480          110 #> 148 2024-02-27 18:45:00 18.478          110 #> 149 2024-02-27 19:00:00 18.477          110 #> 150 2024-02-27 19:15:00 18.476          110 #> 151 2024-02-27 19:30:00 18.475          110 #> 152 2024-02-27 19:45:00 18.473          110 #> 153 2024-02-27 20:00:00 18.472          110 #> 154 2024-02-27 20:15:00 18.472          110 #> 155 2024-02-27 20:30:00 18.471          110 #> 156 2024-02-27 20:45:00 18.471          110 #> 157 2024-02-27 21:00:00 18.471          110 #> 158 2024-02-27 21:15:00 18.470          110 #> 159 2024-02-27 21:30:00 18.470          110 #> 160 2024-02-27 21:45:00 18.469          110 #> 161 2024-02-27 22:00:00 18.468          110 #> 162 2024-02-27 22:15:00 18.467          110 #> 163 2024-02-27 22:30:00 18.466          110 #> 164 2024-02-27 22:45:00 18.465          110 #> 165 2024-02-27 23:00:00 18.463          110 #> 166 2024-02-27 23:15:00 18.462          110 #> 167 2024-02-27 23:30:00 18.461          110 #> 168 2024-02-27 23:45:00 18.460          110 #> 169 2024-02-28 00:00:00 18.458          110 #> 170 2024-02-28 00:15:00 18.457          110 #> 171 2024-02-28 00:30:00 18.455          110 #> 172 2024-02-28 00:45:00 18.454          110 #> 173 2024-02-28 01:00:00 18.452          110 #> 174 2024-02-28 01:15:00 18.451          110 #> 175 2024-02-28 01:30:00 18.450          110 #> 176 2024-02-28 01:45:00 18.448          110 #> 177 2024-02-28 02:00:00 18.447          110 #> 178 2024-02-28 02:15:00 18.446          110 #> 179 2024-02-28 02:30:00 18.444          110 #> 180 2024-02-28 02:45:00 18.443          110 #> 181 2024-02-28 03:00:00 18.441          110 #> 182 2024-02-28 03:15:00 18.440          110 #> 183 2024-02-28 03:30:00 18.439          110 #> 184 2024-02-28 03:45:00 18.438          110 #> 185 2024-02-28 04:00:00 18.436          110 #> 186 2024-02-28 04:15:00 18.435          110 #> 187 2024-02-28 04:30:00 18.433          110 #> 188 2024-02-28 04:45:00 18.433          110 #> 189 2024-02-28 05:00:00 18.431          110 #> 190 2024-02-28 05:15:00 18.430          110 #> 191 2024-02-28 05:30:00 18.429          110 #> 192 2024-02-28 05:45:00 18.428          110 #> 193 2024-02-28 06:00:00 18.426          110 #> 194 2024-02-28 06:15:00 18.425          110 #> 195 2024-02-28 06:30:00 18.424          110 #> 196 2024-02-28 06:45:00 18.422          110 #> 197 2024-02-28 07:00:00 18.421          110 #> 198 2024-02-28 07:15:00 18.419          110 #> 199 2024-02-28 07:30:00 18.418          110 #> 200 2024-02-28 07:45:00 18.416          110 #> 201 2024-02-28 08:00:00 18.415          110 #> 202 2024-02-28 08:15:00 18.413          110 #> 203 2024-02-28 08:30:00 18.412          110 #> 204 2024-02-28 08:45:00 18.411          110 #> 205 2024-02-28 09:00:00 18.409          110 #> 206 2024-02-28 09:15:00 18.408          110 #> 207 2024-02-28 09:30:00 18.407          110 #> 208 2024-02-28 09:45:00 18.405          110 #> 209 2024-02-28 10:00:00 18.404          110 #> 210 2024-02-28 10:15:00 18.403          110 #> 211 2024-02-28 10:30:00 18.401          110 #> 212 2024-02-28 10:45:00 18.400          110 #> 213 2024-02-28 11:00:00 18.399          110 #> 214 2024-02-28 11:15:00 18.397          110 #> 215 2024-02-28 11:30:00 18.396          110 #> 216 2024-02-28 11:45:00 18.395          110 #> 217 2024-02-28 12:00:00 18.394          110 #> 218 2024-02-28 12:15:00 18.392          110 #> 219 2024-02-28 12:30:00 18.391          110 #> 220 2024-02-28 12:45:00 18.390          110 #> 221 2024-02-28 13:00:00 18.389          110 #> 222 2024-02-28 13:15:00 18.388          110 #> 223 2024-02-28 13:30:00 18.387          110 #> 224 2024-02-28 13:45:00 18.386          110 #> 225 2024-02-28 14:00:00 18.384          110 #> 226 2024-02-28 14:15:00 18.383          110 #> 227 2024-02-28 14:30:00 18.382          110 #> 228 2024-02-28 14:45:00 18.381          110 #> 229 2024-02-28 15:00:00 18.380          110 #> 230 2024-02-28 15:15:00 18.379          110 #> 231 2024-02-28 15:30:00 18.378          110 #> 232 2024-02-28 15:45:00 18.377          110 #> 233 2024-02-28 16:00:00 18.376          110 #> 234 2024-02-28 16:15:00 18.375          110 #> 235 2024-02-28 16:30:00 18.374          110 #> 236 2024-02-28 16:45:00 18.373          110 #> 237 2024-02-28 17:00:00 18.373          110 #> 238 2024-02-28 17:15:00 18.372          110 #> 239 2024-02-28 17:30:00 18.371          110 #> 240 2024-02-28 17:45:00 18.370          110 #> 241 2024-02-28 18:00:00 18.369          110 #> 242 2024-02-28 18:15:00 18.369          110 #> 243 2024-02-28 18:30:00 18.368          110 #> 244 2024-02-28 18:45:00 18.367          110 #> 245 2024-02-28 19:00:00 18.366          110 #> 246 2024-02-28 19:15:00 18.365          110 #> 247 2024-02-28 19:30:00 18.364          110 #> 248 2024-02-28 19:45:00 18.363          110 #> 249 2024-02-28 20:00:00 18.362          110 #> 250 2024-02-28 20:15:00 18.361          110 #> 251 2024-02-28 20:30:00 18.360          110 #> 252 2024-02-28 20:45:00 18.360          110 #> 253 2024-02-28 21:00:00 18.359          110 #> 254 2024-02-28 21:15:00 18.358          110 #> 255 2024-02-28 21:30:00 18.357          110 #> 256 2024-02-28 21:45:00 18.357          110 #> 257 2024-02-28 22:00:00 18.356          110 #> 258 2024-02-28 22:15:00 18.355          110 #> 259 2024-02-28 22:30:00 18.354          110 #> 260 2024-02-28 22:45:00 18.354          110 #> 261 2024-02-28 23:00:00 18.353          110 #> 262 2024-02-28 23:15:00 18.352          110 #> 263 2024-02-28 23:30:00 18.351          110 #> 264 2024-02-28 23:45:00 18.351          110 #> 265 2024-02-29 00:00:00 18.350          110 #> 266 2024-02-29 00:15:00 18.349          110 #> 267 2024-02-29 00:30:00 18.349          110 #> 268 2024-02-29 00:45:00 18.348          110 #> 269 2024-02-29 01:00:00 18.347          110 #> 270 2024-02-29 01:15:00 18.347          110 #> 271 2024-02-29 01:30:00 18.346          110 #> 272 2024-02-29 01:45:00 18.346          110 #> 273 2024-02-29 02:00:00 18.345          110 #> 274 2024-02-29 02:15:00 18.345          110 #> 275 2024-02-29 02:30:00 18.344          110 #> 276 2024-02-29 02:45:00 18.343          110 #> 277 2024-02-29 03:00:00 18.343          110 #> 278 2024-02-29 03:15:00 18.342          110 #> 279 2024-02-29 03:30:00 18.342          110 #> 280 2024-02-29 03:45:00 18.341          110 #> 281 2024-02-29 04:00:00 18.341          110 #> 282 2024-02-29 04:15:00 18.340          110 #> 283 2024-02-29 04:30:00 18.340          110 #> 284 2024-02-29 04:45:00 18.339          110 #> 285 2024-02-29 05:00:00 18.339          110 #> 286 2024-02-29 05:15:00 18.338          110 #> 287 2024-02-29 05:30:00 18.337          110 #> 288 2024-02-29 05:45:00 18.337          110 get_timeseries_tsid(\"55419010\", from = \"2017-06-01\", to = \"2017-06-03\",                     datasource = 4) #>               Timestamp Value Quality Code #> 1   2017-05-31 22:00:00  3.97           11 #> 2   2017-05-31 22:10:00  3.80           11 #> 3   2017-05-31 22:20:00  3.63           11 #> 4   2017-05-31 22:30:00  3.48           11 #> 5   2017-05-31 22:40:00  3.32           11 #> 6   2017-05-31 22:50:00  3.17           11 #> 7   2017-05-31 23:00:00  3.02           11 #> 8   2017-05-31 23:10:00  2.87           11 #> 9   2017-05-31 23:20:00  2.74           11 #> 10  2017-05-31 23:30:00  2.60           11 #> 11  2017-05-31 23:40:00  2.48           11 #> 12  2017-05-31 23:50:00  2.35           11 #> 13  2017-06-01 00:00:00  2.23           11 #> 14  2017-06-01 00:10:00  2.11           11 #> 15  2017-06-01 00:20:00  1.99           11 #> 16  2017-06-01 00:30:00  1.87           11 #> 17  2017-06-01 00:40:00  1.75           11 #> 18  2017-06-01 00:50:00  1.64           11 #> 19  2017-06-01 01:00:00  1.53           11 #> 20  2017-06-01 01:10:00  1.42           11 #> 21  2017-06-01 01:20:00  1.31           11 #> 22  2017-06-01 01:30:00  1.20           11 #> 23  2017-06-01 01:40:00  1.09           11 #> 24  2017-06-01 01:50:00  0.99           11 #> 25  2017-06-01 02:00:00  0.90           11 #> 26  2017-06-01 02:10:00  0.80           11 #> 27  2017-06-01 02:20:00  0.71           11 #> 28  2017-06-01 02:30:00  0.62           11 #> 29  2017-06-01 02:40:00  0.53           11 #> 30  2017-06-01 02:50:00  0.44           11 #> 31  2017-06-01 03:00:00  0.36           11 #> 32  2017-06-01 03:10:00  0.28           11 #> 33  2017-06-01 03:20:00  0.20           11 #> 34  2017-06-01 03:30:00  0.13           11 #> 35  2017-06-01 03:40:00  0.07           11 #> 36  2017-06-01 03:50:00  0.01           11 #> 37  2017-06-01 04:00:00 -0.02           11 #> 38  2017-06-01 04:10:00  0.08           11 #> 39  2017-06-01 04:20:00  0.38           11 #> 40  2017-06-01 04:30:00  0.69           11 #> 41  2017-06-01 04:40:00  0.94           11 #> 42  2017-06-01 04:50:00  1.14           11 #> 43  2017-06-01 05:00:00  1.31           11 #> 44  2017-06-01 05:10:00  1.47           11 #> 45  2017-06-01 05:20:00  1.63           11 #> 46  2017-06-01 05:30:00  1.79           11 #> 47  2017-06-01 05:40:00  1.95           11 #> 48  2017-06-01 05:50:00  2.11           11 #> 49  2017-06-01 06:00:00  2.26           11 #> 50  2017-06-01 06:10:00  2.43           11 #> 51  2017-06-01 06:20:00  2.58           11 #> 52  2017-06-01 06:30:00  2.75           11 #> 53  2017-06-01 06:40:00  2.92           11 #> 54  2017-06-01 06:50:00  3.13           11 #> 55  2017-06-01 07:00:00  3.36           11 #> 56  2017-06-01 07:10:00  3.62           11 #> 57  2017-06-01 07:20:00  3.91           11 #> 58  2017-06-01 07:30:00  4.19           11 #> 59  2017-06-01 07:40:00  4.47           11 #> 60  2017-06-01 07:50:00  4.71           11 #> 61  2017-06-01 08:00:00  4.92           11 #> 62  2017-06-01 08:10:00  5.09           11 #> 63  2017-06-01 08:20:00  5.21           11 #> 64  2017-06-01 08:30:00  5.31           11 #> 65  2017-06-01 08:40:00  5.37           11 #> 66  2017-06-01 08:50:00  5.39           11 #> 67  2017-06-01 09:00:00  5.39           11 #> 68  2017-06-01 09:10:00  5.36           11 #> 69  2017-06-01 09:20:00  5.27           11 #> 70  2017-06-01 09:30:00  5.14           11 #> 71  2017-06-01 09:40:00  4.96           11 #> 72  2017-06-01 09:50:00  4.76           11 #> 73  2017-06-01 10:00:00  4.56           11 #> 74  2017-06-01 10:10:00  4.37           11 #> 75  2017-06-01 10:20:00  4.18           11 #> 76  2017-06-01 10:30:00  4.01           11 #> 77  2017-06-01 10:40:00  3.83           11 #> 78  2017-06-01 10:50:00  3.66           11 #> 79  2017-06-01 11:00:00  3.49           11 #> 80  2017-06-01 11:10:00  3.34           11 #> 81  2017-06-01 11:20:00  3.18           11 #> 82  2017-06-01 11:30:00  3.03           11 #> 83  2017-06-01 11:40:00  2.88           11 #> 84  2017-06-01 11:50:00  2.73           11 #> 85  2017-06-01 12:00:00  2.60           11 #> 86  2017-06-01 12:10:00  2.46           11 #> 87  2017-06-01 12:20:00  2.33           11 #> 88  2017-06-01 12:30:00  2.20           11 #> 89  2017-06-01 12:40:00  2.07           11 #> 90  2017-06-01 12:50:00  1.95           11 #> 91  2017-06-01 13:00:00  1.84           11 #> 92  2017-06-01 13:10:00  1.72           11 #> 93  2017-06-01 13:20:00  1.61           11 #> 94  2017-06-01 13:30:00  1.50           11 #> 95  2017-06-01 13:40:00  1.39           11 #> 96  2017-06-01 13:50:00  1.29           11 #> 97  2017-06-01 14:00:00  1.19           11 #> 98  2017-06-01 14:10:00  1.09           11 #> 99  2017-06-01 14:20:00  0.99           11 #> 100 2017-06-01 14:30:00  0.89           11 #> 101 2017-06-01 14:40:00  0.80           11 #> 102 2017-06-01 14:50:00  0.72           11 #> 103 2017-06-01 15:00:00  0.63           11 #> 104 2017-06-01 15:10:00  0.55           11 #> 105 2017-06-01 15:20:00  0.47           11 #> 106 2017-06-01 15:30:00  0.40           11 #> 107 2017-06-01 15:40:00  0.33           11 #> 108 2017-06-01 15:50:00  0.27           11 #> 109 2017-06-01 16:00:00  0.23           11 #> 110 2017-06-01 16:10:00  0.22           11 #> 111 2017-06-01 16:20:00  0.33           11 #> 112 2017-06-01 16:30:00  0.66           11 #> 113 2017-06-01 16:40:00  0.93           11 #> 114 2017-06-01 16:50:00  1.16           11 #> 115 2017-06-01 17:00:00  1.35           11 #> 116 2017-06-01 17:10:00  1.51           11 #> 117 2017-06-01 17:20:00  1.65           11 #> 118 2017-06-01 17:30:00  1.79           11 #> 119 2017-06-01 17:40:00  1.95           11 #> 120 2017-06-01 17:50:00  2.10           11 #> 121 2017-06-01 18:00:00  2.24           11 #> 122 2017-06-01 18:10:00  2.37           11 #> 123 2017-06-01 18:20:00  2.51           11 #> 124 2017-06-01 18:30:00  2.64           11 #> 125 2017-06-01 18:40:00  2.77           11 #> 126 2017-06-01 18:50:00  2.90           11 #> 127 2017-06-01 19:00:00  3.04           11 #> 128 2017-06-01 19:10:00  3.18           11 #> 129 2017-06-01 19:20:00  3.33           11 #> 130 2017-06-01 19:30:00  3.49           11 #> 131 2017-06-01 19:40:00  3.66           11 #> 132 2017-06-01 19:50:00  3.87           11 #> 133 2017-06-01 20:00:00  4.08           11 #> 134 2017-06-01 20:10:00  4.31           11 #> 135 2017-06-01 20:20:00  4.52           11 #> 136 2017-06-01 20:30:00  4.72           11 #> 137 2017-06-01 20:40:00  4.89           11 #> 138 2017-06-01 20:50:00  5.02           11 #> 139 2017-06-01 21:00:00  5.11           11 #> 140 2017-06-01 21:10:00  5.17           11 #> 141 2017-06-01 21:20:00  5.20           11 #> 142 2017-06-01 21:30:00  5.19           11 #> 143 2017-06-01 21:40:00  5.12           11 #> 144 2017-06-01 21:50:00  5.00           11 #> 145 2017-06-01 22:00:00  4.82           11 #> 146 2017-06-01 22:10:00  4.62           11 #> 147 2017-06-01 22:20:00  4.41           11 #> 148 2017-06-01 22:30:00  4.21           11 #> 149 2017-06-01 22:40:00  4.03           11 #> 150 2017-06-01 22:50:00  3.86           11 #> 151 2017-06-01 23:00:00  3.70           15 #> 152 2017-06-01 23:10:00  3.54           11 #> 153 2017-06-01 23:20:00  3.38           11 #> 154 2017-06-01 23:30:00  3.23           11 #> 155 2017-06-01 23:40:00  3.08           11 #> 156 2017-06-01 23:50:00  2.93           11 #> 157 2017-06-02 00:00:00  2.79           11 #> 158 2017-06-02 00:10:00  2.65           11 #> 159 2017-06-02 00:20:00  2.52           11 #> 160 2017-06-02 00:30:00  2.39           11 #> 161 2017-06-02 00:40:00  2.27           11 #> 162 2017-06-02 00:50:00  2.14           11 #> 163 2017-06-02 01:00:00  2.02           11 #> 164 2017-06-02 01:10:00  1.91           11 #> 165 2017-06-02 01:20:00  1.79           11 #> 166 2017-06-02 01:30:00  1.68           11 #> 167 2017-06-02 01:40:00  1.57           11 #> 168 2017-06-02 01:50:00  1.46           11 #> 169 2017-06-02 02:00:00  1.35           11 #> 170 2017-06-02 02:10:00  1.25           11 #> 171 2017-06-02 02:20:00  1.15           11 #> 172 2017-06-02 02:30:00  1.05           11 #> 173 2017-06-02 02:40:00  0.95           11 #> 174 2017-06-02 02:50:00  0.86           11 #> 175 2017-06-02 03:00:00  0.77           11 #> 176 2017-06-02 03:10:00  0.68           11 #> 177 2017-06-02 03:20:00  0.59           11 #> 178 2017-06-02 03:30:00  0.51           11 #> 179 2017-06-02 03:40:00  0.43           11 #> 180 2017-06-02 03:50:00  0.35           11 #> 181 2017-06-02 04:00:00  0.28           11 #> 182 2017-06-02 04:10:00  0.21           11 #> 183 2017-06-02 04:20:00  0.15           11 #> 184 2017-06-02 04:30:00  0.09           11 #> 185 2017-06-02 04:40:00  0.04           11 #> 186 2017-06-02 04:50:00  0.02           11 #> 187 2017-06-02 05:00:00  0.11           11 #> 188 2017-06-02 05:10:00  0.37           11 #> 189 2017-06-02 05:20:00  0.66           11 #> 190 2017-06-02 05:30:00  0.90           11 #> 191 2017-06-02 05:40:00  1.10           11 #> 192 2017-06-02 05:50:00  1.27           11 #> 193 2017-06-02 06:00:00  1.43           11 #> 194 2017-06-02 06:10:00  1.60           11 #> 195 2017-06-02 06:20:00  1.77           11 #> 196 2017-06-02 06:30:00  1.94           11 #> 197 2017-06-02 06:40:00  2.10           11 #> 198 2017-06-02 06:50:00  2.26           11 #> 199 2017-06-02 07:00:00  2.42           11 #> 200 2017-06-02 07:10:00  2.59           11 #> 201 2017-06-02 07:20:00  2.76           11 #> 202 2017-06-02 07:30:00  2.95           11 #> 203 2017-06-02 07:40:00  3.15           11 #> 204 2017-06-02 07:50:00  3.36           11 #> 205 2017-06-02 08:00:00  3.59           11 #> 206 2017-06-02 08:10:00  3.83           11 #> 207 2017-06-02 08:20:00  4.08           11 #> 208 2017-06-02 08:30:00  4.33           11 #> 209 2017-06-02 08:40:00  4.57           11 #> 210 2017-06-02 08:50:00  4.79           11 #> 211 2017-06-02 09:00:00  4.97           11 #> 212 2017-06-02 09:10:00  5.11           11 #> 213 2017-06-02 09:20:00  5.23           11 #> 214 2017-06-02 09:30:00  5.31           11 #> 215 2017-06-02 09:40:00  5.38           11 #> 216 2017-06-02 09:50:00  5.41           11 #> 217 2017-06-02 10:00:00  5.41           11 #> 218 2017-06-02 10:10:00  5.39           11 #> 219 2017-06-02 10:20:00  5.31           11 #> 220 2017-06-02 10:30:00  5.19           11 #> 221 2017-06-02 10:40:00  5.03           11 #> 222 2017-06-02 10:50:00  4.84           11 #> 223 2017-06-02 11:00:00  4.66           11 #> 224 2017-06-02 11:10:00  4.48           11 #> 225 2017-06-02 11:20:00  4.30           11 #> 226 2017-06-02 11:30:00  4.11           11 #> 227 2017-06-02 11:40:00  3.95           11 #> 228 2017-06-02 11:50:00  3.78           11 #> 229 2017-06-02 12:00:00  3.63           11 #> 230 2017-06-02 12:10:00  3.46           11 #> 231 2017-06-02 12:20:00  3.30           11 #> 232 2017-06-02 12:30:00  3.15           11 #> 233 2017-06-02 12:40:00  3.00           11 #> 234 2017-06-02 12:50:00  2.86           11 #> 235 2017-06-02 13:00:00  2.72           11 #> 236 2017-06-02 13:10:00  2.59           11 #> 237 2017-06-02 13:20:00  2.46           11 #> 238 2017-06-02 13:30:00  2.33           11 #> 239 2017-06-02 13:40:00  2.20           11 #> 240 2017-06-02 13:50:00  2.09           11 #> 241 2017-06-02 14:00:00  1.97           11 #> 242 2017-06-02 14:10:00  1.86           11 #> 243 2017-06-02 14:20:00  1.75           11 #> 244 2017-06-02 14:30:00  1.64           11 #> 245 2017-06-02 14:40:00  1.54           11 #> 246 2017-06-02 14:50:00  1.44           11 #> 247 2017-06-02 15:00:00  1.33           11 #> 248 2017-06-02 15:10:00  1.23           11 #> 249 2017-06-02 15:20:00  1.14           11 #> 250 2017-06-02 15:30:00  1.04           11 #> 251 2017-06-02 15:40:00  0.95           11 #> 252 2017-06-02 15:50:00  0.87           11 #> 253 2017-06-02 16:00:00  0.78           11 #> 254 2017-06-02 16:10:00  0.71           11 #> 255 2017-06-02 16:20:00  0.63           11 #> 256 2017-06-02 16:30:00  0.57           11 #> 257 2017-06-02 16:40:00  0.51           11 #> 258 2017-06-02 16:50:00  0.46           11 #> 259 2017-06-02 17:00:00  0.45           11 #> 260 2017-06-02 17:10:00  0.53           11 #> 261 2017-06-02 17:20:00  0.75           11 #> 262 2017-06-02 17:30:00  1.04           11 #> 263 2017-06-02 17:40:00  1.26           11 #> 264 2017-06-02 17:50:00  1.46           11 #> 265 2017-06-02 18:00:00  1.62           11 #> 266 2017-06-02 18:10:00  1.77           11 #> 267 2017-06-02 18:20:00  1.91           11 #> 268 2017-06-02 18:30:00  2.07           11 #> 269 2017-06-02 18:40:00  2.21           11 #> 270 2017-06-02 18:50:00  2.35           11 #> 271 2017-06-02 19:00:00  2.48           11 #> 272 2017-06-02 19:10:00  2.62           11 #> 273 2017-06-02 19:20:00  2.74           11 #> 274 2017-06-02 19:30:00  2.87           11 #> 275 2017-06-02 19:40:00  2.99           11 #> 276 2017-06-02 19:50:00  3.11           11 #> 277 2017-06-02 20:00:00  3.24           11 #> 278 2017-06-02 20:10:00  3.37           11 #> 279 2017-06-02 20:20:00  3.52           11 #> 280 2017-06-02 20:30:00  3.67           11 #> 281 2017-06-02 20:40:00  3.84           11 #> 282 2017-06-02 20:50:00  4.01           11 #> 283 2017-06-02 21:00:00  4.20           11 #> 284 2017-06-02 21:10:00  4.39           11 #> 285 2017-06-02 21:20:00  4.58           11 #> 286 2017-06-02 21:30:00  4.75           11 #> 287 2017-06-02 21:40:00  4.91           11 #> 288 2017-06-02 21:50:00  5.03           11 #> 289 2017-06-02 22:00:00  5.13           11"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get waterinfo Token ‚Äî get_token","title":"Get waterinfo Token ‚Äî get_token","text":"Retrieve fresh waterinfo token. token required get started, see Details section information.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get waterinfo Token ‚Äî get_token","text":"","code":"get_token(   client = NULL,   client_id = NULL,   client_secret = NULL,   token_url = \"http://download.waterinfo.be/kiwis-auth/token\" )  is.expired(token)  expires.in(token)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get waterinfo Token ‚Äî get_token","text":"client base64 encoded client containing client id client secret, seperated : client_id client id string client_secret client secret string token_url url get token token token object","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get waterinfo Token ‚Äî get_token","text":"object class token containing token string token_url, token type moment expiration attributes.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get waterinfo Token ‚Äî get_token","text":"Notice need get token right away download data. limited irregular downloads, token required. amount data downloaded waterinfo.limited via credit system. require extended data requests, request download token. Either client client_id client_secret need passed arguments. provided, client always used. Tokens remain valid 24 hours, fresh one must acquired. limit load server, token objects reused much possible expiration stead creating fresh ones call. client_id client_secret provided examples test purposes, get client via hydrometrie@waterinfo..","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get waterinfo Token ‚Äî get_token","text":"","code":"# Get token via client_id and client_secret client_id <- '32dceece-826c-4b98-9c2d-b16978f0ca6a' client_secret <- '4ada871a-9528-4b4d-bfd5-b570ce8f4d2d' my_token <- get_token(client_id = client_id,client_secret = client_secret) print(my_token) #> Token: #> eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiJiNWYwMWI4ZS1mZDRiLTQxYTktOGEwZi0wZTVjNDk2MmZiYjciLCJpYXQiOjE3MDkxODYwNTcsImlzcyI6Imh0dHA6Ly92cC10c21jYWxjMDE6ODA4MC9LaVdlYlBvcnRhbC9hdXRoLyIsImF1ZCI6IjMyZGNlZWNlLTgyNmMtNGI5OC05YzJkLWIxNjk3OGYwY2E2YSIsImV4cCI6MTcwOTI3MjQ1N30.cJYVIABbmvtF70cj0YQvgeDobrWFKqRiIJXPObs9x_oxZ95lfUVIZRVA6Lr1sDDeFeCMBO33X3eS1lke5SJqGHtr5cKH1M6X6YoOiC8G0M1BlgpKwFZ3gSD8xyKRdlFL-qivb04zNU88gtl5MnrlHBmQ3QxZNvNgKhfNEdZtOl2CO1H70GwBwuSjdhRQ8mmiCGcYHep4cLfZ20cwxLpjMkLZsAXgaek6CoVUHP5lHNYtuvV7YWWO_dwBrtA3s4ZeBOOnz9jZFcFBarKYwEhrWVfyrOYHY3SaFLjEqDopSGdu2D2IrW-PjJm4_jiOmhYNDYmnrJqN2bqrvKu948ep8g #>  #> Attributes: #>  url: http://download.waterinfo.be/kiwis-auth/token #>  type: Bearer #>  expires: 2024-03-01 05:54:18 UTC  # get token via client client <- paste0('MzJkY2VlY2UtODI2Yy00Yjk4LTljMmQtYjE2OTc4ZjBjYTZhOjRhZGE4',                 'NzFhLTk1MjgtNGI0ZC1iZmQ1LWI1NzBjZThmNGQyZA==') my_token <- get_token(client = client) print(my_token) #> Token: #> eyJhbGciOiJSUzUxMiJ9.eyJqdGkiOiIwYzQwMmNkOS03NTFlLTQ0NDItYjBjYy1iMDE4YzNiOGU3MDMiLCJpYXQiOjE3MDkxODYwNTgsImlzcyI6Imh0dHA6Ly92cC10c21jYWxjMDE6ODA4MC9LaVdlYlBvcnRhbC9hdXRoLyIsImF1ZCI6IjMyZGNlZWNlLTgyNmMtNGI5OC05YzJkLWIxNjk3OGYwY2E2YSIsImV4cCI6MTcwOTI3MjQ1OH0.GAjgDL2LjHaWqXWQzOFiA02nFG1SiXpnGuklJJHgMCIUBPy5kSFrOrqfOb_XeKQVncgt3mDiFu2C0IS4XfpzWQ7Yr0uaaG0YLft5VrQePm8WCBIucT6ltLBzS97YVAI4HhlcqQcbwJsjRbS7tCCOI0aK8XLhQGYtUidN6w8PgKA1WS65SO0qkVfVJmUPyaYhJg2pvCmrnkupESI31eZPfcAHYeXamb6A_jOlQIXEshTEiWVQNr8cCv6eZjAPr6-wQzqdU7qVyO3_W7VLHjJATulBA3PEaCrwZv8U4o7VBES-4ox7qwPMAsEkogbRRM5nH09qSd_DApMOBGP5Z_Mgww #>  #> Attributes: #>  url: http://download.waterinfo.be/kiwis-auth/token #>  type: Bearer #>  expires: 2024-03-01 05:54:18 UTC is.expired(my_token) #> [1] FALSE expires.in #> function (token)  #> { #>     UseMethod(\"expires.in\", token) #> } #> <bytecode: 0x55b69f8a5d00> #> <environment: namespace:wateRinfo>  # Use the token when requesting for data (i.e. get_* functions), e.g. get_stations(variable_name = \"verdamping_monteith\", token = my_token) #>      ts_id station_latitude station_longitude station_id station_no #> 1 94310042         51.02263          2.970584      12206   ME01_003 #> 2 94544042         51.20300          5.439589      12213   ME11_002 #> 3 94516042         50.73795          5.141976      12211   ME09_012 #> 4 94530042         51.16224          4.845708      12212   ME10_011 #> 5 94474042         51.24379          4.266912      12208   ME04_001 #> 6 94460042         51.27226          3.728299      12207   ME03_017 #> 7 94488042         50.86149          3.411318      12209   ME05_019 #> 8 94502042         50.88663          4.094898      12210   ME07_006 #>              station_name stationparameter_name parametertype_name #> 1               Zarren_ME                   pET                PET #> 2             Overpelt_ME                   pET                PET #> 3 Niel-bij-St.-Truiden_ME                   pET                PET #> 4            Herentals_ME                   pET                PET #> 5              Melsele_ME                   pET                PET #> 6            Boekhoute_ME                   pET                PET #> 7              Waregem_ME                   pET                PET #> 8           Liedekerke_ME                   pET                PET #>   ts_unitsymbol dataprovider #> 1            mm          VMM #> 2            mm          VMM #> 3            mm          VMM #> 4            mm          VMM #> 5            mm          VMM #> 6            mm          VMM #> 7            mm          VMM #> 8            mm          VMM"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of variables for a given station ‚Äî get_variables","title":"Get list of variables for a given station ‚Äî get_variables","text":"Get list variables given station","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of variables for a given station ‚Äî get_variables","text":"","code":"get_variables(station_no, token = NULL)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_variables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get list of variables for a given station ‚Äî get_variables","text":"data.frame 6 variables: station_name Official name measurement station. station_no Station ID provided waterinfo.website. ts_id Unique timeseries identifier access time series data   corresponding combination station, measured variable   frequency. ts_name Timeseries identifier description name provided   `waterinfo.`. parametertype_name Measured variable description. stationparameter_name Station specific variable description. URL specific request provided comment attribute returned data.frame. Use comment(df) get request URL.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of variables for a given station ‚Äî get_variables","text":"station_no 'stations-nummer' appears download page  waterinfo.token token use call (optional, can retrieved via get_token)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of variables for a given station ‚Äî get_variables","text":"data.frame station_name, station_no, ts_id, ts_name parametertype_name variables station.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/get_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of variables for a given station ‚Äî get_variables","text":"","code":"variables_overpelt <- get_variables(\"ME11_002\") #> Use datasource: 1 for data requests of this station!"},{"path":"https://docs.ropensci.org/wateRinfo/reference/is_supported_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if variable is supported by VMM ts group id ‚Äî is_supported_variable","title":"Check if variable is supported by VMM ts group id ‚Äî is_supported_variable","text":"Check variable supported VMM ts group id","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/is_supported_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if variable is supported by VMM ts group id ‚Äî is_supported_variable","text":"","code":"is_supported_variable(variable_name)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/is_supported_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if variable is supported by VMM ts group id ‚Äî is_supported_variable","text":"variable_name char","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/is_supported_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if variable is supported by VMM ts group id ‚Äî is_supported_variable","text":"Raise error variable supported directly, otherwise NULL","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/is_supported_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if variable is supported by VMM ts group id ‚Äî is_supported_variable","text":"","code":"is_supported_variable(\"wind_speed\")"},{"path":"https://docs.ropensci.org/wateRinfo/reference/isdatetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the string input can be converted to a date, provides FALSE or date ‚Äî isdatetime","title":"Check if the string input can be converted to a date, provides FALSE or date ‚Äî isdatetime","text":"(acknowledgements micstr/isdate.R)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/isdatetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the string input can be converted to a date, provides FALSE or date ‚Äî isdatetime","text":"","code":"isdatetime(datetime)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/isdatetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the string input can be converted to a date, provides FALSE or date ‚Äî isdatetime","text":"datetime string representation date","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/isdatetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the string input can be converted to a date, provides FALSE or date ‚Äî isdatetime","text":"FALSE | \"POSIXct\" \"POSIXt\"","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/liedekerke.html","id":null,"dir":"Reference","previous_headings":"","what":"Soil moisture data of Liedekerke, January 2017 ‚Äî liedekerke","title":"Soil moisture data of Liedekerke, January 2017 ‚Äî liedekerke","text":"dataset compiled downloading 1 day soil moisture data Liedekerke  measurement station Waterinfo.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/liedekerke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soil moisture data of Liedekerke, January 2017 ‚Äî liedekerke","text":"","code":"liedekerke"},{"path":"https://docs.ropensci.org/wateRinfo/reference/liedekerke.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soil moisture data of Liedekerke, January 2017 ‚Äî liedekerke","text":"data frame 23,816 rows 9 variables: ts_id identifier downloaded time serie Timestamp datetime Value measured value variable Quality Code Quality code measurement station_name full name measurement station station_no short code name measurement station ts_name type/frequency time serie parametertype_name parameter type name stationparameter_name parameter name station level","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/liedekerke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Soil moisture data of Liedekerke, January 2017 ‚Äî liedekerke","text":"https://www.waterinfo./","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/parse_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the from/to/period arguments ‚Äî parse_period","title":"Check the from/to/period arguments ‚Äî parse_period","text":"Handle information provided date information period provide feedback user. Valid combinations arguments : /, /period, /period, period, ","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/parse_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the from/to/period arguments ‚Äî parse_period","text":"","code":"parse_period(from = NULL, to = NULL, period = NULL)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/parse_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the from/to/period arguments ‚Äî parse_period","text":"string representing date datetime object string representing date datetime object period input string according format required waterinfo","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/parse_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the from/to/period arguments ‚Äî parse_period","text":"list relevant period/date information","code":""},{"path":[]},{"path":"https://docs.ropensci.org/wateRinfo/reference/print.waterinfo_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom print function of the API request response ‚Äî print.waterinfo_api","title":"Custom print function of the API request response ‚Äî print.waterinfo_api","text":"Custom print function API request response","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/print.waterinfo_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom print function of the API request response ‚Äî print.waterinfo_api","text":"","code":"# S3 method for waterinfo_api print(x, ...)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/print.waterinfo_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom print function of the API request response ‚Äî print.waterinfo_api","text":"x waterinfo_api ... args arguments passed methods.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_datasource.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the datasource using the station number ‚Äî resolve_datasource","title":"Define the datasource using the station number ‚Äî resolve_datasource","text":"Using 'stations-nummer' provided  waterinfo., function tries identify datasource use particular variable","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_datasource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the datasource using the station number ‚Äî resolve_datasource","text":"","code":"resolve_datasource(station_no)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_datasource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the datasource using the station number ‚Äî resolve_datasource","text":"station_no 'stations-nummer' appears download page  waterinfo.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_datasource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the datasource using the station number ‚Äî resolve_datasource","text":"integer 1 VMM, 4 'meetnetten' (HIC,...)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_datasource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the datasource using the station number ‚Äî resolve_datasource","text":"Notice VMM provide official documentation, just derived checking API response . automated less hard-coded approach beneficial, data available moment.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_datasource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the datasource using the station number ‚Äî resolve_datasource","text":"","code":"resolve_datasource('akl03e-1066') #> [1] 4 resolve_datasource('K07_OM421') #> [1] 1"},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_timeseriesgroupid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","title":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","text":"Translate usage available variables corresponding timeseriesgroupID, based provided lookup table VMM","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_timeseriesgroupid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","text":"","code":"resolve_timeseriesgroupid(variable_name, frequency = \"15min\")"},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_timeseriesgroupid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","text":"variable_name valid variable name, supported VMM API frequency valid frequency given variable","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_timeseriesgroupid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","text":"list containing timeseriesgroup_id variable frequency combination","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_timeseriesgroupid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","text":"Remark information based query, information provided package make variable names readable lookup table provided external data package, see inst/extdata","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/resolve_timeseriesgroupid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get timeseriesgroupID for a supported variable ‚Äî resolve_timeseriesgroupid","text":"","code":"resolve_timeseriesgroupid(\"rainfall\", \"15min\") #> $timeseriesgroup_id #> [1] 192896 #>"},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"VMM supported timeseriesgroups frequencies ‚Äî supported_frequencies","title":"VMM supported timeseriesgroups frequencies ‚Äî supported_frequencies","text":"Provide list VMM supported frequencies given timeseriesgroupID either dutch english","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VMM supported timeseriesgroups frequencies ‚Äî supported_frequencies","text":"","code":"supported_frequencies(variable_name)"},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VMM supported timeseriesgroups frequencies ‚Äî supported_frequencies","text":"variable_name char name valid variable either dutch english","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_frequencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VMM supported timeseriesgroups frequencies ‚Äî supported_frequencies","text":"","code":"supported_frequencies('rainfall') #> [1] \"1min\"  \"15min\" \"hour\"  \"day\"   \"month\" \"year\""},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"VMM supported timeseriesgroups variables ‚Äî supported_variables","title":"VMM supported timeseriesgroups variables ‚Äî supported_variables","text":"Provide list VMM supported variables timeseriesgroupID either dutch english","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VMM supported timeseriesgroups variables ‚Äî supported_variables","text":"","code":"supported_variables(language = \"nl\")"},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"VMM supported timeseriesgroups variables ‚Äî supported_variables","text":"language char nl (dutch) en (english) variable names","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"VMM supported timeseriesgroups variables ‚Äî supported_variables","text":"data.frame containing variable names either english dutch","code":""},{"path":"https://docs.ropensci.org/wateRinfo/reference/supported_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"VMM supported timeseriesgroups variables ‚Äî supported_variables","text":"","code":"# Request supported variables in Dutch supported_variables(\"nl\") #>              variable_nl #> 1                 afvoer #> 6      bodem_verzadiging #> 7            bodem_vocht #> 8   dauwpunt_temperatuur #> 9       grondtemperatuur #> 10           grondwarmte #> 11            instraling #> 12             luchtdruk #> 13 luchttemperatuur175cm #> 14              neerslag #> 20 relatieve_vochtigheid #> 21   verdamping_monteith #> 25     verdamping_penman #> 29         watersnelheid #> 34            waterstand #> 39      watertemperatuur #> 40          windrichting #> 41          windsnelheid  # Request supported variables in English supported_variables(\"en\") #>              variable_en #> 1              discharge #> 6        soil_saturation #> 7          soil_moisture #> 8  dew_point_temperature #> 9     ground_temperature #> 10           ground_heat #> 11            irradiance #> 12          air_pressure #> 13 air_temperature_175cm #> 14              rainfall #> 20     relative_humidity #> 21  evaporation_monteith #> 25    evaporation_penman #> 29        water_velocity #> 34           water_level #> 39     water_temperature #> 40        wind_direction #> 41            wind_speed"},{"path":"https://docs.ropensci.org/wateRinfo/reference/wateRinfo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wateRinfo: Download Time Series Data from Waterinfo.be ‚Äî wateRinfo-package","title":"wateRinfo: Download Time Series Data from Waterinfo.be ‚Äî wateRinfo-package","text":"wateRinfo facilitates access waterinfo.(<https://www.waterinfo.>), website managed Flanders Environment Agency (VMM) Flanders Hydraulics Research. website provides access real-time water weather related environmental variables Flanders (Belgium), rainfall, air pressure, discharge, water level. package provides functions search stations variables, download time series.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/wateRinfo/reference/wateRinfo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wateRinfo: Download Time Series Data from Waterinfo.be ‚Äî wateRinfo-package","text":"Maintainer: Stijn Van Hoey stijnvanhoey@gmail.com (ORCID) contributors: Willem Maetens w.maetens@vmm.[contributor] Peter Desmet peter.desmet@inbo.(ORCID) [contributor] Research Institute Nature Forest (INBO) info@inbo.[copyright holder]","code":""},{"path":[]},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"new-features-0-3-0-9047","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"wateRinfo 0.3.0.9047 (2018-12-13)","text":"WateRinfo moved ropensci, thanks @ldecicco-USGS review @karthik editing submission","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"minor-improvements-0-3-0-9047","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"wateRinfo 0.3.0.9047 (2018-12-13)","text":"Change URLs https version, now supported waterinfo.Make sure data.frame content characters factors Return supported frequencies vector instead single ling character","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"documentation-fixes-0-3-0-9047","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"wateRinfo 0.3.0.9047 (2018-12-13)","text":"Update usage pkgdown 1.3.0 Moved link references INBO tp ropensci Add ropensci footer Mark Institute Nature Forest Research (INBO) copyright holder Updated logo base color Notice, add -development fourth component release tag development version. information, see package guide.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"crucial-quick-fix-0-2-2","dir":"Changelog","previous_headings":"","what":"CRUCIAL QUICK FIX","title":"wateRinfo 0.2.2 (2018-11-07)","text":"datasource added waterinfo.query, server gives html/text response containing tomcat server error messag. error now captured properly. user normally uses wrapped API call functions, difference user level.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"documentation-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"wateRinfo 0.2.2 (2018-11-07)","text":"Bring documentation date new datasource handling","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"waterinfo-021-2018-10-17","dir":"Changelog","previous_headings":"","what":"wateRinfo 0.2.1 (2018-10-17)","title":"wateRinfo 0.2.1 (2018-10-17)","text":"datasource non-VMM stations changed recently (tests CI broke). Moreover, ts_identifiers stations changed well. adaptations data source (waterinfo.) level.","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"crucial-quick-fix-0-2-1","dir":"Changelog","previous_headings":"","what":"CRUCIAL QUICK FIX","title":"wateRinfo 0.2.1 (2018-10-17)","text":"Change datasource 4 non-VMM stations Adapt examples vignettes existing ts_identifiers","code":""},{"path":[]},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"wateRinfo 0.2.0 (2018-10-01)","text":"Better support changed station identifiers waterinfo.dataproviders","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"wateRinfo 0.2.0 (2018-10-01)","text":"Change print statements message statements Add missing test check token object type (remark: current missing tests hard introduce without control original API behaviour) Test files consistent names Update code style using styler","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"documentation-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"wateRinfo 0.2.0 (2018-10-01)","text":"Describe table output format explicitly roxygen docs add quality codes waterinfo.dataproviders (#27) Update contributing guidelines, thanks @peterdesmet great effort providing welcoming, clear written engaging contributing guidelines Provide code examples public functions Provide top-level documentation handle ?wateRinfo (#23) Add keywords internal internal functions part documentation index (#24)","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"waterinfo-012-2018-05-03","dir":"Changelog","previous_headings":"","what":"wateRinfo 0.1.2 (2018-05-03)","title":"wateRinfo 0.1.2 (2018-05-03)","text":"Added NEWS.md file track changes package (#25). Provide support parsible non-existing dates (e.g.¬†‚Äò2018-04-31‚Äô) Add contributing guidelines","code":""},{"path":"https://docs.ropensci.org/wateRinfo/news/index.html","id":"waterinfo-011-2017-11-29","dir":"Changelog","previous_headings":"","what":"wateRinfo 0.1.1 (2017-11-29)","title":"wateRinfo 0.1.1 (2017-11-29)","text":"Add support token handling distributed waterinfo.","code":""}]
